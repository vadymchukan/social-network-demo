{"version":3,"file":"static/js/243.00faabe1.chunk.js","mappings":"8KACA,GAAgB,IAAM,qBAAqB,QAAU,yBAAyB,YAAc,6BAA6B,OAAS,wBAAwB,SAAW,2B,SCerK,EAVmB,SAACA,GAChB,IAAIC,EAAO,YAAcD,EAAME,GAC/B,OACI,gBAAKC,UAAWC,EAAAA,OAAW,IAAMA,EAAAA,OAAjC,UACI,SAAC,KAAD,CAASC,GAAIJ,EAAb,SAAoBD,EAAMM,UCDtC,EANgB,SAACN,GACb,OACI,gBAAKG,UAAWC,EAAAA,QAAhB,SAA4BJ,EAAMO,W,2DCuDpCC,GAAeC,EAAAA,EAAAA,GAAiB,KAYhCC,GAAsBC,EAAAA,EAAAA,GAAU,CAACC,KAAM,qBAAjBD,EAXL,SAACX,GACpB,OAAO,kBAAMa,OAAO,GAAGC,SAAUd,EAAMe,aAAhC,WACH,0BACI,SAACC,EAAA,EAAD,CAAOC,YAAY,qBAAqBX,KAAK,iBAAiBY,UAAWC,EAAAA,GACzEC,SAAY,CAACC,EAAAA,EAAUb,QAE3B,gCAAM,qCAAN,aAOR,EA7DgB,SAACR,GAab,IAAIsB,EAAQtB,EAAMuB,YAEdC,EAAkBF,EAAMG,QAAQC,KAAI,SAAAC,GAAC,OAAI,SAAC,EAAD,CAAYrB,KAAMqB,EAAErB,KAAiBJ,GAAIyB,EAAEzB,IAAZyB,EAAEzB,OAC1E0B,EAAmBN,EAAMO,SAASH,KAAI,SAAAI,GAAC,OAAI,SAAC,EAAD,CAASvB,QAASuB,EAAEvB,SAAcuB,EAAE5B,OAC9DoB,EAAMS,eAc3B,OAAK/B,EAAMgC,QAGP,iBAAK7B,UAAWC,EAAAA,QAAhB,WACI,gBAAKD,UAAWC,EAAAA,YAAhB,SACKoB,KAGL,iBAAKrB,UAAWC,EAAAA,SAAhB,WACI,yBAAMwB,KACN,SAAClB,EAAD,CAAqBI,SAdb,SAACmB,GACjBjC,EAAMkC,YAAYD,EAAOF,0BAGH,SAAC,KAAD,CAAU1B,GAAG,Y,2DCxCvC8B,EAA6B,SAACb,GAAD,MAAY,CACzCU,OAAQV,EAAMc,KAAKJ,SC2BvB,GAAeK,E,QAAAA,KACXC,EAAAA,EAAAA,KAnBkB,SAAChB,GACnB,MAAO,CACHC,YAAaD,EAAMC,gBAIF,SAACgB,GACtB,MAAO,CACHL,YAAa,SAACH,GACVQ,GAASC,EAAAA,EAAAA,GAAmBT,UDfP,SAACU,GAAe,IACvCC,EADsC,0IAExC,WACI,OAAKC,KAAK3C,MAAMgC,QACT,SAACS,GAAD,UAAeE,KAAK3C,SADI,SAAC,KAAD,CAAUK,GAAG,eAHR,GACZuC,EAAAA,WAQhC,OADqCN,EAAAA,EAAAA,IAAQH,EAARG,CAAoCI,KCgB7E,CAGEG","sources":["webpack://react-pr/./src/components/Dialogs/Dialogs.module.css?1b2e","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","hoc/withAuthRedirect.js","components/Dialogs/DialogsContainer.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"img\":\"Dialogs_img__Bhcdy\",\"dialogs\":\"Dialogs_dialogs__oe96H\",\"dialogsItem\":\"Dialogs_dialogsItem__VE52U\",\"active\":\"Dialogs_active__t8cjl\",\"messages\":\"Dialogs_messages__Cg2l+\"};","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport s from './../Dialogs.module.css';\n\n\n\nconst DialogItem = (props) => {\n    let path = \"/dialogs/\" + props.id;\n    return (\n        <div className={s.dialog + ' ' + s.active}>\n            <NavLink to={path}>{props.name}</NavLink>\n        </div>\n    )\n}\n\n\nexport default DialogItem;","import React from \"react\";\nimport s from './../Dialogs.module.css';\n\nconst Message = (props) => {\n    return (\n        <div className={s.message}>{props.message}</div>\n    )\n}\n\nexport default Message;","import React from \"react\";\nimport { Navigate } from \"react-router-dom\";\nimport DialogItem from \"./DialogItem/DialogItem\";\nimport s from './Dialogs.module.css';\nimport Message from \"./Message/Message\";\nimport { Field, reduxForm } from \"redux-form\";\nimport { TextArea } from \"../common/FormsControls/FormsControls\";\nimport { maxLenghtCreator, required } from \"../../units/validators/validators\";\n\n<DialogItem />;\n\n<Message />;\n\nconst Dialogs = (props) => {\n\n    // let dialogs = [\n    //     { id: 1, name: 'Vadym' },\n    //     { id: 2, name: 'Klaudia' },\n    //     { id: 3, name: 'Maksim' }\n    // ];\n    // let messages = [\n    //     { id: 1, message: 'Hi' },\n    //     { id: 2, message: 'How a you' },\n    //     { id: 3, message: 'Yo' }\n    // ];\n\n    let state = props.dialogsPage;\n\n    let dialogsElements = state.dialogs.map(d => <DialogItem name={d.name} key={d.id} id={d.id} />);\n    let messagesElements = state.messages.map(m => <Message message={m.message} key={m.id} />);\n    let newMessageBody = state.newMessageBody;\n\n    // let onSendMessageClick = () => {\n    //     props.sendMessage();\n    // }\n    // let onNewMessageChange = (e) => {\n    //     let body = e.target.value;\n    //     props.updateNewMessageBody(body);\n    // }\n\n    let addNewMessage = (values) => {\n        props.sendMessage(values.newMessageBody);\n    }\n\n    if (!props.isAuth) return <Navigate to=\"/login\" />\n\n    return (\n        <div className={s.dialogs}>\n            <div className={s.dialogsItem}>\n                {dialogsElements}\n            </div>\n\n            <div className={s.messages}>\n                <div>{messagesElements}</div>\n                <AddMessageFormRedux onSubmit={ addNewMessage } />\n\n            </div>\n        </div>\n    )\n}\nconst maxLenght100 = maxLenghtCreator(100);\nconst AddMessageForm = (props) => {\n    return <form action=\"\" onSubmit={props.handleSubmit}>\n        <div>\n            <Field placeholder=\"Enter your message\" name=\"newMessageBody\" component={TextArea} \n            validate = {[required, maxLenght100]}/>\n        </div>\n        <div> <button>Send</button> </div>\n    </form>\n} \n\n\nconst AddMessageFormRedux = reduxForm({form: 'dialogMessageForm'})(AddMessageForm)\n\nexport default Dialogs;","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Navigate } from \"react-router-dom\";\n\nlet mapStateToPropsForRedirect = (state) => ({\n    isAuth: state.auth.isAuth\n})\n\nexport const widthAuthRedirect = (Component) => {\n    class RedirectComponent extends React.Component {\n        render (){\n            if (!this.props.isAuth) return <Navigate to='/login' />\n            return <Component {...this.props}/>\n        }\n    }\n\n    let ConecctedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);    \n    return ConecctedAuthRedirectComponent;\n}","import React from \"react\";\nimport DialogItem from \"./DialogItem/DialogItem\";\nimport Message from \"./Message/Message\";\n import { updateNewMessageBodyCreator, sendMessageCreator } from \"../../redux/dialogs-reducer\";\nimport Dialogs from \"./Dialogs\";\nimport { connect } from \"react-redux\";\nimport { widthAuthRedirect } from \"../../hoc/withAuthRedirect\";\nimport { compose } from \"redux\";\n\n<DialogItem />;\n\n<Message />;\n\n\nlet mapStateToProps = (state) => {\n    return {\n        dialogsPage: state.dialogsPage\n    }\n}\n\nlet mapDispatchToProps = (dispatch) => {\n    return {\n        sendMessage: (newMessageBody)=>{     \n            dispatch(sendMessageCreator(newMessageBody));\n        }\n    }\n}\n\n// let AuthRedirectComponent = (props) =>{\n//     if (!this.props.isAuth) return <Navigate to='/login' />\n//     return <Dialogs {...props}/>\n// }\nexport default compose(\n    connect(mapStateToProps, mapDispatchToProps),\n    widthAuthRedirect\n)(Dialogs);\n\n\n\n"],"names":["props","path","id","className","s","to","name","message","maxLenght100","maxLenghtCreator","AddMessageFormRedux","reduxForm","form","action","onSubmit","handleSubmit","Field","placeholder","component","TextArea","validate","required","state","dialogsPage","dialogsElements","dialogs","map","d","messagesElements","messages","m","newMessageBody","isAuth","values","sendMessage","mapStateToPropsForRedirect","auth","compose","connect","dispatch","sendMessageCreator","Component","RedirectComponent","this","React","Dialogs"],"sourceRoot":""}
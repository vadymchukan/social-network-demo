{"ast":null,"code":"import { authAPI } from \"../api/api\";\nconst SET_USER_DATA = 'SET_USER_DATA';\nlet initialState = {\n  userId: null,\n  email: null,\n  login: null,\n  isAuth: false\n};\n\nconst authReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case SET_USER_DATA:\n      return { ...state,\n        ...action.payload\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport const setAuthUserData = (userId, email, login, isAuth) => ({\n  type: SET_USER_DATA,\n  payload: {\n    userId,\n    email,\n    login,\n    isAuth\n  }\n});\nexport const getAuthUserData = () => {\n  return dispach => {\n    authAPI.my().then(response => {\n      if (response.data.resultCode === 0) {\n        let {\n          id,\n          email,\n          login\n        } = response.data.data;\n        dispach(setAuthUserData(id, email, login, true));\n      }\n    });\n  };\n};\nexport const login = (email, password, remamberMy) => dispach => {\n  authAPI.login().then(response => {\n    if (response.data.resultCode === 0) {\n      dispach(getAuthUserData());\n    }\n  });\n};\nexport const logout = () => dispach => {\n  authAPI.logout().then(response => {\n    if (response.data.resultCode === 0) {\n      dispach(setAuthUserData(id, email, login, false));\n    }\n  });\n};\nexport default authReducer;","map":{"version":3,"sources":["/Users/admin/Desktop/react-pr/src/redux/auth-reducer.js"],"names":["authAPI","SET_USER_DATA","initialState","userId","email","login","isAuth","authReducer","state","action","type","payload","setAuthUserData","getAuthUserData","dispach","my","then","response","data","resultCode","id","password","remamberMy","logout"],"mappings":"AAAA,SAASA,OAAT,QAAwB,YAAxB;AAEA,MAAMC,aAAa,GAAG,eAAtB;AAEA,IAAIC,YAAY,GAAG;AACfC,EAAAA,MAAM,EAAE,IADO;AAEfC,EAAAA,KAAK,EAAE,IAFQ;AAGfC,EAAAA,KAAK,EAAE,IAHQ;AAIfC,EAAAA,MAAM,EAAE;AAJO,CAAnB;;AAOA,MAAMC,WAAW,GAAG,YAAkC;AAAA,MAAjCC,KAAiC,uEAAzBN,YAAyB;AAAA,MAAXO,MAAW;;AAElD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKT,aAAL;AACI,aAAO,EACH,GAAGO,KADA;AAEH,WAAGC,MAAM,CAACE;AAFP,OAAP;;AAKJ;AACI,aAAOH,KAAP;AARR;AAUH,CAZD;;AAcA,OAAO,MAAMI,eAAe,GAAG,CAACT,MAAD,EAASC,KAAT,EAAgBC,KAAhB,EAAuBC,MAAvB,MAAmC;AAAEI,EAAAA,IAAI,EAAET,aAAR;AAC9DU,EAAAA,OAAO,EAAE;AAACR,IAAAA,MAAD;AAASC,IAAAA,KAAT;AAAgBC,IAAAA,KAAhB;AAAuBC,IAAAA;AAAvB;AADqD,CAAnC,CAAxB;AAGP,OAAO,MAAMO,eAAe,GAAG,MAAI;AAC/B,SAAQC,OAAD,IAAW;AACdd,IAAAA,OAAO,CAACe,EAAR,GACCC,IADD,CACMC,QAAQ,IAAI;AAChB,UAAIA,QAAQ,CAACC,IAAT,CAAcC,UAAd,KAA6B,CAAjC,EAAoC;AAClC,YAAI;AAACC,UAAAA,EAAD;AAAKhB,UAAAA,KAAL;AAAYC,UAAAA;AAAZ,YAAqBY,QAAQ,CAACC,IAAT,CAAcA,IAAvC;AACAJ,QAAAA,OAAO,CAACF,eAAe,CAACQ,EAAD,EAAKhB,KAAL,EAAYC,KAAZ,EAAmB,IAAnB,CAAhB,CAAP;AACD;AACF,KAND;AAOH,GARD;AASH,CAVM;AAYP,OAAO,MAAMA,KAAK,GAAG,CAACD,KAAD,EAAQiB,QAAR,EAAkBC,UAAlB,KAAiCR,OAAD,IAAW;AACxDd,EAAAA,OAAO,CAACK,KAAR,GACCW,IADD,CACMC,QAAQ,IAAI;AAChB,QAAIA,QAAQ,CAACC,IAAT,CAAcC,UAAd,KAA6B,CAAjC,EAAoC;AAClCL,MAAAA,OAAO,CAACD,eAAe,EAAhB,CAAP;AACD;AACF,GALD;AAMH,CAPE;AASH,OAAO,MAAMU,MAAM,GAAG,MAAMT,OAAD,IAAW;AAClCd,EAAAA,OAAO,CAACuB,MAAR,GACCP,IADD,CACMC,QAAQ,IAAI;AAChB,QAAIA,QAAQ,CAACC,IAAT,CAAcC,UAAd,KAA6B,CAAjC,EAAoC;AAClCL,MAAAA,OAAO,CAACF,eAAe,CAACQ,EAAD,EAAKhB,KAAL,EAAYC,KAAZ,EAAmB,KAAnB,CAAhB,CAAP;AACD;AACF,GALD;AAMH,CAPM;AAUX,eAAeE,WAAf","sourcesContent":["import { authAPI } from \"../api/api\";\n\nconst SET_USER_DATA = 'SET_USER_DATA';\n\nlet initialState = {\n    userId: null,\n    email: null,\n    login: null,\n    isAuth: false\n}\n\nconst authReducer = (state = initialState, action) => {\n\n    switch (action.type) {\n        case SET_USER_DATA:\n            return {\n                ...state, \n                ...action.payload\n                \n            }\n        default:\n            return state;\n    }\n}\n\nexport const setAuthUserData = (userId, email, login, isAuth) => ({ type: SET_USER_DATA, \n    payload: {userId, email, login, isAuth} })\n\nexport const getAuthUserData = ()=>{\n    return (dispach)=>{\n        authAPI.my()\n        .then(response => {\n          if (response.data.resultCode === 0) {\n            let {id, email, login} = response.data.data;\n            dispach(setAuthUserData(id, email, login, true));\n          }\n        });\n    }\n}\n\nexport const login = (email, password, remamberMy)=> (dispach)=>{\n        authAPI.login()\n        .then(response => {\n          if (response.data.resultCode === 0) {\n            dispach(getAuthUserData());\n          }\n        });\n    }\n\n    export const logout = ()=> (dispach)=>{\n        authAPI.logout()\n        .then(response => {\n          if (response.data.resultCode === 0) {\n            dispach(setAuthUserData(id, email, login, false));\n          }\n        });\n    }\n\n\nexport default authReducer;"]},"metadata":{},"sourceType":"module"}
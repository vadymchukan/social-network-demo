{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Documents/MyPrograms/ReactProject/social-network-demo/src/components/Profile/ProfileContainer.jsx\";\nimport React from \"react\";\nimport Profile from \"./Profile\";\nimport { connect } from \"react-redux\";\nimport { getStatus, getUserProfile, updateStatus } from \"../../redux/profile-reducer\"; //import { useParams } from 'react-router-dom'; \n\nimport { useLocation, useNavigate, useParams } from \"react-router-dom\";\nimport { compose } from \"redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction withRouter(Component) {\n  var _s = $RefreshSig$();\n\n  function ComponentWithRouterProp(props) {\n    _s();\n\n    let location = useLocation();\n    let navigate = useNavigate();\n    let params = useParams();\n    return /*#__PURE__*/_jsxDEV(Component, { ...props,\n      router: {\n        location,\n        navigate,\n        params\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this);\n  }\n\n  _s(ComponentWithRouterProp, \"G4H0N746j5KwtpeOKQjfXhEbWfg=\", false, function () {\n    return [useLocation, useNavigate, useParams];\n  });\n\n  return ComponentWithRouterProp;\n}\n\nconst refreshProfile = () => {\n  let userId = this.props.router.params.userId;\n\n  if (!userId) {\n    // userId = this.props.authorizedUserId;\n    // // if (!userId){\n    // //     this.props.history.push(\"/login\")\n    // // }\n    userId = 24579;\n  }\n\n  this.props.getUserProfile(userId);\n  this.props.getStatus(userId);\n};\n\nclass ProfileContainer extends React.Component {\n  componentDidMount() {\n    this.refreshProfile();\n  }\n\n  componentDidUpdate(prevProps, prevStatus, snapshot) {\n    this.refreshProfile();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Profile, { ...this.props,\n      profile: this.props.profile,\n      status: this.props.status,\n      updateStatus: this.props.updateStatus\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this);\n  }\n\n} // = (props) =>{\n//     if (!this.props.isAuth) return <Navigate to='/login' />\n//     return <ProfileContainer {...props}/>\n// }\n\n\nlet mapStateToProps = state => ({\n  profile: state.profilePage.profile,\n  status: state.profilePage.status\n});\n\nexport default compose(connect(mapStateToProps, {\n  getUserProfile,\n  getStatus,\n  updateStatus\n}), withRouter // widthAuthRedirect\n)(ProfileContainer);","map":{"version":3,"sources":["/Users/admin/Documents/MyPrograms/ReactProject/social-network-demo/src/components/Profile/ProfileContainer.jsx"],"names":["React","Profile","connect","getStatus","getUserProfile","updateStatus","useLocation","useNavigate","useParams","compose","withRouter","Component","ComponentWithRouterProp","props","location","navigate","params","refreshProfile","userId","router","ProfileContainer","componentDidMount","componentDidUpdate","prevProps","prevStatus","snapshot","render","profile","status","mapStateToProps","state","profilePage"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,WAApB;AAEA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,SAAT,EAAoBC,cAApB,EAAoCC,YAApC,QAAwD,6BAAxD,C,CACA;;AACA,SACIC,WADJ,EAEIC,WAFJ,EAGIC,SAHJ,QAIO,kBAJP;AAOA,SAASC,OAAT,QAAwB,OAAxB;;;AAEA,SAASC,UAAT,CAAoBC,SAApB,EAA+B;AAAA;;AAC3B,WAASC,uBAAT,CAAiCC,KAAjC,EAAwC;AAAA;;AACpC,QAAIC,QAAQ,GAAGR,WAAW,EAA1B;AACA,QAAIS,QAAQ,GAAGR,WAAW,EAA1B;AACA,QAAIS,MAAM,GAAGR,SAAS,EAAtB;AACA,wBACI,QAAC,SAAD,OACQK,KADR;AAEI,MAAA,MAAM,EAAE;AAAEC,QAAAA,QAAF;AAAYC,QAAAA,QAAZ;AAAsBC,QAAAA;AAAtB;AAFZ;AAAA;AAAA;AAAA;AAAA,YADJ;AAMH;;AAX0B,KAClBJ,uBADkB;AAAA,YAERN,WAFQ,EAGRC,WAHQ,EAIVC,SAJU;AAAA;;AAY3B,SAAOI,uBAAP;AACH;;AAED,MAAMK,cAAc,GAAG,MAAI;AACvB,MAAIC,MAAM,GAAG,KAAKL,KAAL,CAAWM,MAAX,CAAkBH,MAAlB,CAAyBE,MAAtC;;AACA,MAAI,CAACA,MAAL,EAAa;AACT;AACA;AACA;AACA;AACAA,IAAAA,MAAM,GAAG,KAAT;AACH;;AACD,OAAKL,KAAL,CAAWT,cAAX,CAA0Bc,MAA1B;AACA,OAAKL,KAAL,CAAWV,SAAX,CAAqBe,MAArB;AACH,CAXD;;AAaA,MAAME,gBAAN,SAA+BpB,KAAK,CAACW,SAArC,CAA+C;AAE3CU,EAAAA,iBAAiB,GAAG;AAChB,SAAKJ,cAAL;AACH;;AAEDK,EAAAA,kBAAkB,CAACC,SAAD,EAAYC,UAAZ,EAAwBC,QAAxB,EAAkC;AAChD,SAAKR,cAAL;AACH;;AAEDS,EAAAA,MAAM,GAAG;AACL,wBACI,QAAC,OAAD,OAAa,KAAKb,KAAlB;AACI,MAAA,OAAO,EAAE,KAAKA,KAAL,CAAWc,OADxB;AAEI,MAAA,MAAM,EAAG,KAAKd,KAAL,CAAWe,MAFxB;AAGI,MAAA,YAAY,EAAI,KAAKf,KAAL,CAAWR;AAH/B;AAAA;AAAA;AAAA;AAAA,YADJ;AAMH;;AAjB0C,C,CAqB/C;AACA;AACA;AACA;;;AACA,IAAIwB,eAAe,GAAIC,KAAD,KAAY;AAC9BH,EAAAA,OAAO,EAAEG,KAAK,CAACC,WAAN,CAAkBJ,OADG;AAE9BC,EAAAA,MAAM,EAAEE,KAAK,CAACC,WAAN,CAAkBH;AAFI,CAAZ,CAAtB;;AAIA,eAAenB,OAAO,CAClBP,OAAO,CAAC2B,eAAD,EAAkB;AAAEzB,EAAAA,cAAF;AAAmBD,EAAAA,SAAnB;AAA8BE,EAAAA;AAA9B,CAAlB,CADW,EAElBK,UAFkB,CAGlB;AAHkB,CAAP,CAIbU,gBAJa,CAAf","sourcesContent":["import React from \"react\";\nimport Profile from \"./Profile\";\n\nimport { connect } from \"react-redux\";\nimport { getStatus, getUserProfile, updateStatus } from \"../../redux/profile-reducer\";\n//import { useParams } from 'react-router-dom'; \nimport {\n    useLocation,\n    useNavigate,\n    useParams,\n} from \"react-router-dom\";\n\n\nimport { compose } from \"redux\";\n\nfunction withRouter(Component) {\n    function ComponentWithRouterProp(props) {\n        let location = useLocation();\n        let navigate = useNavigate();\n        let params = useParams();\n        return (\n            <Component\n                {...props}\n                router={{ location, navigate, params }}\n            />\n        );\n    }\n    return ComponentWithRouterProp;\n}\n\nconst refreshProfile = ()=>{\n    let userId = this.props.router.params.userId;\n    if (!userId) {\n        // userId = this.props.authorizedUserId;\n        // // if (!userId){\n        // //     this.props.history.push(\"/login\")\n        // // }\n        userId = 24579\n    }\n    this.props.getUserProfile(userId);\n    this.props.getStatus(userId);\n}\n\nclass ProfileContainer extends React.Component {\n\n    componentDidMount() {\n        this.refreshProfile();\n    }\n\n    componentDidUpdate(prevProps, prevStatus, snapshot) {\n        this.refreshProfile();\n    }\n\n    render() {\n        return (\n            <Profile {...this.props}\n                profile={this.props.profile}\n                status ={this.props.status} \n                updateStatus = {this.props.updateStatus}/>\n        )\n    }\n}\n\n\n// = (props) =>{\n//     if (!this.props.isAuth) return <Navigate to='/login' />\n//     return <ProfileContainer {...props}/>\n// }\nlet mapStateToProps = (state) => ({\n    profile: state.profilePage.profile,\n    status: state.profilePage.status\n})\nexport default compose(\n    connect(mapStateToProps, { getUserProfile,  getStatus, updateStatus }),\n    withRouter,\n    // widthAuthRedirect\n)(ProfileContainer);\n\n\n\n"]},"metadata":{},"sourceType":"module"}
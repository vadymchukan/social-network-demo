{"ast":null,"code":"const UPDATE_NEW_POST_TEXT = 'UPDATE-NEW-POST-TEXT';\nconst ADD_POST = 'ADD-POST';\nconst SEND_MESSAGE = 'SEND_MESSAGE';\nconst UPDATE_NEW_MESSAGE_BODY = 'UPDATE_NEW_MESSAGE_BODY';\nlet store = {\n  _state: {\n    profilePage: {\n      posts: [{\n        id: 1,\n        message: 'Hi, how are you',\n        likeCount: 2\n      }, {\n        id: 2,\n        message: 'Its my first post!',\n        likeCount: 3\n      }],\n      newPostText: 'Napisz text'\n    },\n    dialogsPage: {\n      messages: [{\n        id: 1,\n        message: 'Hi'\n      }, {\n        id: 2,\n        message: 'How a you'\n      }, {\n        id: 3,\n        message: 'Yo'\n      }],\n      dialogs: [{\n        id: 1,\n        name: 'Vadym'\n      }, {\n        id: 2,\n        name: 'Klaudia'\n      }, {\n        id: 3,\n        name: 'Maksim'\n      }],\n      newMessageBody: ''\n    },\n    sidebar: {}\n  },\n\n  _callSubscriber() {\n    console.log('state change');\n  },\n\n  getState() {\n    return this._state;\n  },\n\n  subscribe(observe) {\n    this._callSubscriber = observe;\n  },\n\n  dispatch(action) {\n    if (action.type === ADD_POST) {\n      let newPost = {\n        id: 5,\n        message: this._state.profilePage.newPostText,\n        likeCount: 0\n      };\n\n      this._state.profilePage.posts.push(newPost);\n\n      this._state.profilePage.newPostText = '';\n\n      this._callSubscriber(this._state);\n    } else if (action.type === UPDATE_NEW_POST_TEXT) {\n      this._state.profilePage.newPostText = action.newText;\n\n      this._callSubscriber(this._state);\n    } else if (action.type === UPDATE_NEW_MESSAGE_BODY) {\n      this._state.dialogsPage.newMessageBody = action.body;\n\n      this._callSubscriber(this._state);\n    } else if (action.type === SEND_MESSAGE) {\n      let body = this._state.dialogsPage.newMessageBody;\n      this._state.dialogsPage.newMessageBody = '';\n\n      this._state.dialogsPage.messages.push({\n        id: 6,\n        message: body\n      });\n\n      this._callSubscriber(this._state);\n    }\n  }\n\n};\nexport const addPostActionCreator = () => ({\n  type: ADD_POST\n});\nexport const updateNewPostActionCreator = text => ({\n  type: UPDATE_NEW_POST_TEXT,\n  newText: text\n});\nexport default store;\nwindow.store = store;","map":{"version":3,"sources":["/Users/vadymchukan/Desktop/www/react-start/react-pr/src/redux/state.js"],"names":["UPDATE_NEW_POST_TEXT","ADD_POST","SEND_MESSAGE","UPDATE_NEW_MESSAGE_BODY","store","_state","profilePage","posts","id","message","likeCount","newPostText","dialogsPage","messages","dialogs","name","newMessageBody","sidebar","_callSubscriber","console","log","getState","subscribe","observe","dispatch","action","type","newPost","push","newText","body","addPostActionCreator","updateNewPostActionCreator","text","window"],"mappings":"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","sourcesContent":["const UPDATE_NEW_POST_TEXT = 'UPDATE-NEW-POST-TEXT';\nconst ADD_POST = 'ADD-POST';\nconst SEND_MESSAGE = 'SEND_MESSAGE';\nconst UPDATE_NEW_MESSAGE_BODY = 'UPDATE_NEW_MESSAGE_BODY';\n\nlet store = {\n    _state: {\n        profilePage: {\n            posts: [\n                { id: 1, message: 'Hi, how are you', likeCount: 2 },\n                { id: 2, message: 'Its my first post!', likeCount: 3 },\n            ],\n            newPostText: 'Napisz text'\n        },\n        dialogsPage: {\n            messages: [\n                { id: 1, message: 'Hi' },\n                { id: 2, message: 'How a you' },\n                { id: 3, message: 'Yo' }\n            ],\n            dialogs: [\n                { id: 1, name: 'Vadym' },\n                { id: 2, name: 'Klaudia' },\n                { id: 3, name: 'Maksim' }\n            ],\n            newMessageBody: ''\n\n        \n        },\n        sidebar: {}\n    },\n    _callSubscriber() {\n        console.log('state change');\n    },\n    getState() {\n        return this._state;\n    },\n    subscribe(observe) {\n        this._callSubscriber = observe;\n    },\n    dispatch(action) {\n        if (action.type === ADD_POST) {\n            let newPost = {\n                id: 5,\n                message: this._state.profilePage.newPostText,\n                likeCount: 0\n            }\n            this._state.profilePage.posts.push(newPost);\n            this._state.profilePage.newPostText = '';\n            this._callSubscriber(this._state);\n        } else if (action.type === UPDATE_NEW_POST_TEXT) {\n            this._state.profilePage.newPostText = action.newText;\n            this._callSubscriber(this._state);\n        } else if (action.type === UPDATE_NEW_MESSAGE_BODY) {\n            this._state.dialogsPage.newMessageBody = action.body;\n            this._callSubscriber(this._state);\n        } else if (action.type === SEND_MESSAGE) {\n            let body =  this._state.dialogsPage.newMessageBody;\n            this._state.dialogsPage.newMessageBody = '';\n            this._state.dialogsPage.messages.push({ id: 6, message: body });\n            this._callSubscriber(this._state);\n        }\n    }\n}\n\nexport const addPostActionCreator = () => ({ type: ADD_POST })\nexport const updateNewPostActionCreator = (text) => ({ type: UPDATE_NEW_POST_TEXT, newText: text })\n\nexport default store;\nwindow.store = store;"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Desktop/react-pr/src/components/Users/UsersContainer.jsx\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { followAC, setCurrentPageAC, setTotalCountAC, setUsersAC, toggletIsFetchingAC, unfollowAC } from \"../../redux/users-reducer\";\nimport * as axios from \"axios\";\nimport Users from \"./Users\";\nimport preloader from \"../../assets/images/loader.svg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass UsersContainer extends React.Component {\n  constructor() {\n    super(...arguments);\n\n    this.onPageChanged = pageNumber => {\n      this.props.setCurrentPage(pageNumber);\n      this.props.toggletIsFetchingt(true);\n      axios.get(`https://social-network.samuraijs.com/api/1.0/users?page=${pageNumber}&count=${this.props.pageSize}`).then(response => {\n        this.props.toggletIsFetchingt(false);\n        this.props.setUsers(response.data.items);\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.props.toggletIsFetchingt(true);\n    axios.get(`https://social-network.samuraijs.com/api/1.0/users?page=${this.props.currentPage}&count=${this.props.pageSize}`).then(response => {\n      this.props.toggletIsFetchingt(false);\n      this.props.setUsers(response.data.items);\n      this.props.setTotalCount(response.data.totalCount);\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [this.props.isFetching ? /*#__PURE__*/_jsxDEV(\"img\", {\n        src: preloader\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 31\n      }, this) : null, /*#__PURE__*/_jsxDEV(Users, {\n        totalUsersCount: this.props.totalUsersCount,\n        pageSize: this.props.pageSize,\n        currentPage: this.props.currentPage,\n        onPageChanged: this.onPageChanged,\n        users: this.props.users,\n        unfollow: this.props.unfollow,\n        follow: this.props.follow\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nlet mapStateToProps = state => {\n  return {\n    users: state.usersPage.users,\n    pageSize: state.usersPage.pageSize,\n    totalUsersCount: state.usersPage.totalUsersCount,\n    currentPage: state.usersPage.currentPage,\n    isFetching: state.usersPage.isFetching\n  };\n};\n\nlet mapDispachToProps = dispatch => {\n  return {\n    follow: userId => {\n      dispatch(followAC(userId));\n    },\n    unfollow: userId => {\n      dispatch(unfollowAC(userId));\n    },\n    setUsers: users => {\n      dispatch(setUsersAC(users));\n    },\n    setCurrentPage: pageNumber => {\n      dispatch(setCurrentPageAC(pageNumber));\n    },\n    setTotalCount: totalCount => {\n      dispatch(setTotalCountAC(totalCount));\n    },\n    toggletIsFetchingt: isFetching => {\n      dispatch(toggletIsFetchingAC(isFetching));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispachToProps)(UsersContainer);","map":{"version":3,"sources":["/Users/admin/Desktop/react-pr/src/components/Users/UsersContainer.jsx"],"names":["React","connect","followAC","setCurrentPageAC","setTotalCountAC","setUsersAC","toggletIsFetchingAC","unfollowAC","axios","Users","preloader","UsersContainer","Component","onPageChanged","pageNumber","props","setCurrentPage","toggletIsFetchingt","get","pageSize","then","response","setUsers","data","items","componentDidMount","currentPage","setTotalCount","totalCount","render","isFetching","totalUsersCount","users","unfollow","follow","mapStateToProps","state","usersPage","mapDispachToProps","dispatch","userId"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { followAC, setCurrentPageAC, setTotalCountAC, setUsersAC, toggletIsFetchingAC, unfollowAC } from \"../../redux/users-reducer\";\nimport * as axios from \"axios\";\nimport Users from \"./Users\";\nimport preloader from \"../../assets/images/loader.svg\"\n\nclass UsersContainer extends React.Component {\n    componentDidMount() {\n        this.props.toggletIsFetchingt(true);\n        axios.get(`https://social-network.samuraijs.com/api/1.0/users?page=${this.props.currentPage}&count=${this.props.pageSize}`).then(response => {\n            this.props.toggletIsFetchingt(false);    \n        this.props.setUsers(response.data.items);\n            this.props.setTotalCount(response.data.totalCount);\n        });\n    }\n    onPageChanged = (pageNumber) => {\n        this.props.setCurrentPage(pageNumber);\n        this.props.toggletIsFetchingt(true);\n        axios.get(`https://social-network.samuraijs.com/api/1.0/users?page=${pageNumber}&count=${this.props.pageSize}`).then(response => {\n            this.props.toggletIsFetchingt(false);   \n        this.props.setUsers(response.data.items);\n        });\n    }\n    render() {\n    return <>\n    { this.props.isFetching ? <img src={ preloader }/> : null }\n    <Users totalUsersCount = {this.props.totalUsersCount}\n    pageSize = {this.props.pageSize}\n    currentPage = {this.props.currentPage}\n    onPageChanged = {this.onPageChanged}\n    users = {this.props.users}\n    unfollow = {this.props.unfollow}\n    follow = {this.props.follow}  />\n    </>\n}}\n\nlet mapStateToProps = (state) => { \n    return {\n        users: state.usersPage.users,\n        pageSize:state.usersPage.pageSize,\n        totalUsersCount:state.usersPage.totalUsersCount,\n        currentPage:state.usersPage.currentPage,\n        isFetching: state.usersPage.isFetching\n    }\n}\n\nlet mapDispachToProps = (dispatch) => {\n    return {\n        follow: (userId) => {\n            dispatch(followAC(userId));\n        },\n        unfollow: (userId) => {\n            dispatch(unfollowAC(userId));\n        },\n        setUsers:(users) => {\n            dispatch(setUsersAC(users))\n        },\n        setCurrentPage: (pageNumber) => {\n            dispatch(setCurrentPageAC(pageNumber))\n        },\n        setTotalCount: (totalCount) => { \n            dispatch(setTotalCountAC(totalCount))\n        },\n        toggletIsFetchingt: (isFetching) => { \n            dispatch(toggletIsFetchingAC(isFetching))\n        }\n        \n        \n}}\n\nexport default connect (mapStateToProps, mapDispachToProps)(UsersContainer)"]},"metadata":{},"sourceType":"module"}
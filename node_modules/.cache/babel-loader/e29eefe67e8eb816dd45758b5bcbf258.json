{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Desktop/react-pr/src/components/common/FormsControls/FormsControls.js\";\nimport React from \"react\";\nimport styles from \"../FormsControls/FormsControls.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const TextArea = _ref => {\n  let {\n    input,\n    meta,\n    ...props\n  } = _ref;\n  const hasError = meta.touched && meta.error;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.formControl + \" \" + (hasError ? styles.error : \"\"),\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"textarea\", { ...input,\n        ...props\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 13\n    }, this), hasError && /*#__PURE__*/_jsxDEV(\"span\", {\n      children: meta.error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 25\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 9\n  }, this);\n};\n_c = TextArea;\nexport const Input = _ref2 => {\n  let {\n    input,\n    meta,\n    ...props\n  } = _ref2;\n  const hasError = meta.touched && meta.error;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.formControl + \" \" + (hasError ? styles.error : \"\"),\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"input\", { ...input,\n        ...props\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this), hasError && /*#__PURE__*/_jsxDEV(\"span\", {\n      children: meta.error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 25\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 9\n  }, this);\n};\n_c2 = Input;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"TextArea\");\n$RefreshReg$(_c2, \"Input\");","map":{"version":3,"sources":["/Users/admin/Desktop/react-pr/src/components/common/FormsControls/FormsControls.js"],"names":["React","styles","TextArea","input","meta","props","hasError","touched","error","formControl","Input"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,2CAAnB;;AAEA,OAAO,MAAMC,QAAQ,GAAG,QAA+B;AAAA,MAA9B;AAAEC,IAAAA,KAAF;AAASC,IAAAA,IAAT;AAAe,OAAGC;AAAlB,GAA8B;AACnD,QAAMC,QAAQ,GAAGF,IAAI,CAACG,OAAL,IAAgBH,IAAI,CAACI,KAAtC;AACA,sBACI;AAAK,IAAA,SAAS,EAAEP,MAAM,CAACQ,WAAP,GAAqB,GAArB,IAA4BH,QAAQ,GAAGL,MAAM,CAACO,KAAV,GAAiB,EAArD,CAAhB;AAAA,4BACI;AAAA,6BACI,yBAAcL,KAAd;AAAA,WAAwBE;AAAxB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ,EAIIC,QAAQ,iBAAI;AAAA,gBAAOF,IAAI,CAACI;AAAZ;AAAA;AAAA;AAAA;AAAA,YAJhB;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAQH,CAVM;KAAMN,Q;AAWb,OAAO,MAAMQ,KAAK,GAAG,SAA+B;AAAA,MAA9B;AAAEP,IAAAA,KAAF;AAASC,IAAAA,IAAT;AAAe,OAAGC;AAAlB,GAA8B;AAChD,QAAMC,QAAQ,GAAGF,IAAI,CAACG,OAAL,IAAgBH,IAAI,CAACI,KAAtC;AACA,sBACI;AAAK,IAAA,SAAS,EAAEP,MAAM,CAACQ,WAAP,GAAqB,GAArB,IAA4BH,QAAQ,GAAGL,MAAM,CAACO,KAAV,GAAiB,EAArD,CAAhB;AAAA,4BACI;AAAA,6BACI,sBAAWL,KAAX;AAAA,WAAqBE;AAArB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ,EAIIC,QAAQ,iBAAI;AAAA,gBAAOF,IAAI,CAACI;AAAZ;AAAA;AAAA;AAAA;AAAA,YAJhB;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAQH,CAVM;MAAME,K","sourcesContent":["import React from \"react\";\nimport styles from \"../FormsControls/FormsControls.module.css\"\n\nexport const TextArea = ({ input, meta, ...props }) => {\n    const hasError = meta.touched && meta.error;\n    return (\n        <div className={styles.formControl + \" \" + (hasError ? styles.error: \"\")}>\n            <div>\n                <textarea {...input}{...props} />\n            </div>\n           {hasError && <span>{meta.error}</span>} \n        </div>\n    )\n}\nexport const Input = ({ input, meta, ...props }) => {\n    const hasError = meta.touched && meta.error;\n    return (\n        <div className={styles.formControl + \" \" + (hasError ? styles.error: \"\")}>\n            <div>\n                <input {...input}{...props} />\n            </div>\n           {hasError && <span>{meta.error}</span>} \n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}
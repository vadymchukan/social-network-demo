{"ast":null,"code":"const FOLLOW = 'FOLLOW';\nconst UNFOLLOW = 'UNFOLLOW';\nconst SET_USERS = 'SET_USERS';\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\nconst SET_TOTAL_COUNT = 'SET_TOTAL_COUNT';\nlet initialState = {\n  users: [],\n  pageSize: 5,\n  totalUsersCount: 0,\n  currentPage: 1,\n  isFetching: false\n};\n\nconst usersReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case FOLLOW:\n      return { ...state,\n        users: state.users.map(u => {\n          if (u.id === action.userId) {\n            return { ...u,\n              followed: true\n            };\n          }\n\n          return u;\n        })\n      };\n\n    case UNFOLLOW:\n      return { ...state,\n        users: state.users.map(u => {\n          if (u.id === action.userId) {\n            return { ...u,\n              followed: false\n            };\n          }\n\n          return u;\n        })\n      };\n\n    case SET_USERS:\n      {\n        //return { ...state, users:[...state.users, ...action.users] }\n        return { ...state,\n          users: action.users\n        };\n      }\n\n    case SET_CURRENT_PAGE:\n      {\n        return { ...state,\n          currentPage: action.currentPage\n        };\n      }\n\n    case SET_TOTAL_COUNT:\n      {\n        return { ...state,\n          totalUsersCount: action.count\n        };\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport const followAC = userId => ({\n  type: FOLLOW,\n  userId\n});\nexport const unfollowAC = userId => ({\n  type: UNFOLLOW,\n  userId\n});\nexport const setUsersAC = users => ({\n  type: SET_USERS,\n  users\n});\nexport const setCurrentPageAC = currentPage => ({\n  type: SET_CURRENT_PAGE,\n  currentPage\n});\nexport const setTotalCountAC = totalUsersCount => ({\n  type: SET_TOTAL_COUNT,\n  count: totalUsersCount\n});\nexport default usersReducer;","map":{"version":3,"sources":["/Users/admin/Desktop/react-pr/src/redux/users-reducer.js"],"names":["FOLLOW","UNFOLLOW","SET_USERS","SET_CURRENT_PAGE","SET_TOTAL_COUNT","initialState","users","pageSize","totalUsersCount","currentPage","isFetching","usersReducer","state","action","type","map","u","id","userId","followed","count","followAC","unfollowAC","setUsersAC","setCurrentPageAC","setTotalCountAC"],"mappings":"AAAA,MAAMA,MAAM,GAAG,QAAf;AACA,MAAMC,QAAQ,GAAG,UAAjB;AACA,MAAMC,SAAS,GAAG,WAAlB;AACA,MAAMC,gBAAgB,GAAG,kBAAzB;AACA,MAAMC,eAAe,GAAG,iBAAxB;AAEA,IAAIC,YAAY,GAAG;AACfC,EAAAA,KAAK,EAAE,EADQ;AAEfC,EAAAA,QAAQ,EAAE,CAFK;AAGfC,EAAAA,eAAe,EAAC,CAHD;AAIfC,EAAAA,WAAW,EAAE,CAJE;AAKfC,EAAAA,UAAU,EAAE;AALG,CAAnB;;AAQA,MAAMC,YAAY,GAAG,YAAkC;AAAA,MAAjCC,KAAiC,uEAAzBP,YAAyB;AAAA,MAAXQ,MAAW;;AAEnD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKd,MAAL;AACI,aAAO,EACH,GAAGY,KADA;AAEHN,QAAAA,KAAK,EAAEM,KAAK,CAACN,KAAN,CAAYS,GAAZ,CAAgBC,CAAC,IAAE;AACtB,cAAIA,CAAC,CAACC,EAAF,KAASJ,MAAM,CAACK,MAApB,EAA4B;AACxB,mBAAO,EAAC,GAAGF,CAAJ;AAAOG,cAAAA,QAAQ,EAAC;AAAhB,aAAP;AACH;;AACD,iBAAOH,CAAP;AACH,SALM;AAFJ,OAAP;;AASJ,SAAKf,QAAL;AACI,aAAO,EACH,GAAGW,KADA;AAEHN,QAAAA,KAAK,EAAEM,KAAK,CAACN,KAAN,CAAYS,GAAZ,CAAgBC,CAAC,IAAE;AACtB,cAAIA,CAAC,CAACC,EAAF,KAASJ,MAAM,CAACK,MAApB,EAA4B;AACxB,mBAAO,EAAC,GAAGF,CAAJ;AAAOG,cAAAA,QAAQ,EAAC;AAAhB,aAAP;AACH;;AACD,iBAAOH,CAAP;AACH,SALM;AAFJ,OAAP;;AASJ,SAAKd,SAAL;AAAgB;AACZ;AACA,eAAO,EAAE,GAAGU,KAAL;AAAYN,UAAAA,KAAK,EAACO,MAAM,CAACP;AAAzB,SAAP;AACH;;AACD,SAAKH,gBAAL;AAAuB;AACnB,eAAO,EAAE,GAAGS,KAAL;AAAYH,UAAAA,WAAW,EAAEI,MAAM,CAACJ;AAAhC,SAAP;AACH;;AACD,SAAKL,eAAL;AAAsB;AAClB,eAAO,EAAE,GAAGQ,KAAL;AAAaJ,UAAAA,eAAe,EAAEK,MAAM,CAACO;AAArC,SAAP;AACH;;AACD;AACI,aAAOR,KAAP;AAhCR;AAkCH,CApCD;;AAsCA,OAAO,MAAMS,QAAQ,GAAIH,MAAD,KAAa;AAAEJ,EAAAA,IAAI,EAAEd,MAAR;AAAgBkB,EAAAA;AAAhB,CAAb,CAAjB;AACP,OAAO,MAAMI,UAAU,GAAIJ,MAAD,KAAa;AAAEJ,EAAAA,IAAI,EAAEb,QAAR;AAAkBiB,EAAAA;AAAlB,CAAb,CAAnB;AACP,OAAO,MAAMK,UAAU,GAAIjB,KAAD,KAAY;AAAEQ,EAAAA,IAAI,EAAEZ,SAAR;AAAmBI,EAAAA;AAAnB,CAAZ,CAAnB;AACP,OAAO,MAAMkB,gBAAgB,GAAIf,WAAD,KAAkB;AAACK,EAAAA,IAAI,EAAEX,gBAAP;AAAyBM,EAAAA;AAAzB,CAAlB,CAAzB;AACP,OAAO,MAAMgB,eAAe,GAAKjB,eAAF,KAAuB;AAAEM,EAAAA,IAAI,EAAEV,eAAR;AAA0BgB,EAAAA,KAAK,EAAEZ;AAAjC,CAAvB,CAAxB;AAEP,eAAeG,YAAf","sourcesContent":["const FOLLOW = 'FOLLOW';\nconst UNFOLLOW = 'UNFOLLOW';\nconst SET_USERS = 'SET_USERS';\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\nconst SET_TOTAL_COUNT = 'SET_TOTAL_COUNT';\n\nlet initialState = {\n    users: [ ],\n    pageSize: 5,\n    totalUsersCount:0,\n    currentPage: 1,\n    isFetching: false\n}\n\nconst usersReducer = (state = initialState, action) => {\n\n    switch (action.type) {\n        case FOLLOW:\n            return {\n                ...state, \n                users: state.users.map(u=>{\n                    if (u.id === action.userId) {\n                        return {...u, followed:true}\n                    }\n                    return u;\n                })\n            }\n        case UNFOLLOW:\n            return {\n                ...state, \n                users: state.users.map(u=>{\n                    if (u.id === action.userId) {\n                        return {...u, followed:false}\n                    }\n                    return u;\n                })\n            }\n        case SET_USERS: {\n            //return { ...state, users:[...state.users, ...action.users] }\n            return { ...state, users:action.users }\n        }\n        case SET_CURRENT_PAGE: {       \n            return { ...state, currentPage: action.currentPage }\n        }\n        case SET_TOTAL_COUNT: {       \n            return { ...state,  totalUsersCount: action.count }\n        }\n        default:\n            return state;\n    }\n}\n\nexport const followAC = (userId) => ({ type: FOLLOW, userId })\nexport const unfollowAC = (userId) => ({ type: UNFOLLOW, userId })\nexport const setUsersAC = (users) => ({ type: SET_USERS, users })\nexport const setCurrentPageAC = (currentPage) => ({type: SET_CURRENT_PAGE, currentPage})\nexport const setTotalCountAC = ( totalUsersCount) => ({ type: SET_TOTAL_COUNT,  count: totalUsersCount })\n\nexport default usersReducer;"]},"metadata":{},"sourceType":"module"}
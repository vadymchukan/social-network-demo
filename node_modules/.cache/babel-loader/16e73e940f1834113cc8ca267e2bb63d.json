{"ast":null,"code":"let store = {\n  _state: {\n    profilePage: {\n      posts: [{\n        id: 1,\n        message: 'Hi, how are you',\n        likeCount: 2\n      }, {\n        id: 2,\n        message: 'Its my first post!',\n        likeCount: 3\n      }],\n      newPostText: 'Napisz text'\n    },\n    dialogsPage: {\n      messages: [{\n        id: 1,\n        message: 'Hi'\n      }, {\n        id: 2,\n        message: 'How a you'\n      }, {\n        id: 3,\n        message: 'Yo'\n      }],\n      dialogs: [{\n        id: 1,\n        name: 'Vadym'\n      }, {\n        id: 2,\n        name: 'Klaudia'\n      }, {\n        id: 3,\n        name: 'Maksim'\n      }]\n    },\n    sidebar: {}\n  },\n\n  _callSubscriber() {\n    console.log('state change');\n  },\n\n  getState() {\n    return this._state;\n  },\n\n  subscribe(observe) {\n    this._callSubscriber = observe;\n  },\n\n  dispatch(action) {\n    if (action.type === 'ADD-POST') {\n      let newPost = {\n        id: 5,\n        message: this._state.profilePage.newPostText,\n        likeCount: 0\n      };\n\n      this._state.profilePage.posts.push(newPost);\n\n      this._state.profilePage.newPostText = '';\n\n      this._callSubscriber(this._state);\n    } else if (action.type === 'UPDATE-NEW-POST-TEXT') {\n      this._state.profilePage.newPostText = action.newText;\n\n      this._callSubscriber(this._state);\n    }\n  }\n\n};\nexport let addPostActionCreator = () => {\n  return {\n    type: 'ADD-POST'\n  };\n};\nexport let updateNewPostActionCreator = text => {\n  return {\n    type: 'UPDATE-NEW-POST-TEXT',\n    newText: text\n  };\n};\nexport default store;\nwindow.store = store;","map":{"version":3,"sources":["/Users/vadymchukan/Desktop/www/react-start/react-pr/src/redux/state.js"],"names":["store","_state","profilePage","posts","id","message","likeCount","newPostText","dialogsPage","messages","dialogs","name","sidebar","_callSubscriber","console","log","getState","subscribe","observe","dispatch","action","type","newPost","push","newText","addPostActionCreator","updateNewPostActionCreator","text","window"],"mappings":"AAAA,IAAIA,KAAK,GAAG;AACRC,EAAAA,MAAM,EAAE;AACJC,IAAAA,WAAW,EAAE;AACTC,MAAAA,KAAK,EAAE,CACH;AAAEC,QAAAA,EAAE,EAAE,CAAN;AAASC,QAAAA,OAAO,EAAE,iBAAlB;AAAqCC,QAAAA,SAAS,EAAE;AAAhD,OADG,EAEH;AAAEF,QAAAA,EAAE,EAAE,CAAN;AAASC,QAAAA,OAAO,EAAE,oBAAlB;AAAwCC,QAAAA,SAAS,EAAE;AAAnD,OAFG,CADE;AAKTC,MAAAA,WAAW,EAAC;AALH,KADT;AAQJC,IAAAA,WAAW,EAAE;AACTC,MAAAA,QAAQ,EAAE,CACN;AAAEL,QAAAA,EAAE,EAAE,CAAN;AAASC,QAAAA,OAAO,EAAE;AAAlB,OADM,EAEN;AAAED,QAAAA,EAAE,EAAE,CAAN;AAASC,QAAAA,OAAO,EAAE;AAAlB,OAFM,EAGN;AAAED,QAAAA,EAAE,EAAE,CAAN;AAASC,QAAAA,OAAO,EAAE;AAAlB,OAHM,CADD;AAMTK,MAAAA,OAAO,EAAE,CACL;AAAEN,QAAAA,EAAE,EAAE,CAAN;AAASO,QAAAA,IAAI,EAAE;AAAf,OADK,EAEL;AAAEP,QAAAA,EAAE,EAAE,CAAN;AAASO,QAAAA,IAAI,EAAE;AAAf,OAFK,EAGL;AAAEP,QAAAA,EAAE,EAAE,CAAN;AAASO,QAAAA,IAAI,EAAE;AAAf,OAHK;AANA,KART;AAoBJC,IAAAA,OAAO,EAAE;AApBL,GADA;;AAuBRC,EAAAA,eAAe,GAAG;AACdC,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACA,GAzBI;;AA2BRC,EAAAA,QAAQ,GAAI;AACR,WAAO,KAAKf,MAAZ;AACH,GA7BO;;AA8BRgB,EAAAA,SAAS,CAAEC,OAAF,EAAW;AAChB,SAAKL,eAAL,GAAuBK,OAAvB;AACH,GAhCO;;AAkCRC,EAAAA,QAAQ,CAACC,MAAD,EAAS;AACb,QAAIA,MAAM,CAACC,IAAP,KAAgB,UAApB,EAAgC;AAC5B,UAAIC,OAAO,GAAG;AACVlB,QAAAA,EAAE,EAAC,CADO;AAEVC,QAAAA,OAAO,EAAE,KAAKJ,MAAL,CAAYC,WAAZ,CAAwBK,WAFvB;AAGVD,QAAAA,SAAS,EAAE;AAHD,OAAd;;AAKA,WAAKL,MAAL,CAAYC,WAAZ,CAAwBC,KAAxB,CAA8BoB,IAA9B,CAAmCD,OAAnC;;AACA,WAAKrB,MAAL,CAAYC,WAAZ,CAAwBK,WAAxB,GAAoC,EAApC;;AACA,WAAKM,eAAL,CAAqB,KAAKZ,MAA1B;AACH,KATD,MASO,IAAImB,MAAM,CAACC,IAAP,KAAgB,sBAApB,EAA6C;AAChD,WAAKpB,MAAL,CAAYC,WAAZ,CAAwBK,WAAxB,GAAoCa,MAAM,CAACI,OAA3C;;AACA,WAAKX,eAAL,CAAqB,KAAKZ,MAA1B;AACH;AACJ;;AAhDO,CAAZ;AAmDA,OAAO,IAAIwB,oBAAoB,GAAG,MAAM;AACpC,SAAO;AACLJ,IAAAA,IAAI,EAAE;AADD,GAAP;AAGD,CAJI;AAMP,OAAQ,IAAIK,0BAA0B,GAAIC,IAAD,IAAU;AAC/C,SAAO;AACLN,IAAAA,IAAI,EAAE,sBADD;AACyBG,IAAAA,OAAO,EAAEG;AADlC,GAAP;AAGD,CAJK;AAOR,eAAe3B,KAAf;AACA4B,MAAM,CAAC5B,KAAP,GAAeA,KAAf","sourcesContent":["let store = {\n    _state: {\n        profilePage: {\n            posts: [\n                { id: 1, message: 'Hi, how are you', likeCount: 2 },\n                { id: 2, message: 'Its my first post!', likeCount: 3 },\n            ],\n            newPostText:'Napisz text'\n        },\n        dialogsPage: {\n            messages: [\n                { id: 1, message: 'Hi' },\n                { id: 2, message: 'How a you' },\n                { id: 3, message: 'Yo' }\n            ],\n            dialogs: [\n                { id: 1, name: 'Vadym' },\n                { id: 2, name: 'Klaudia' },\n                { id: 3, name: 'Maksim' }\n            ]\n        },\n        sidebar: {}\n    },\n    _callSubscriber() {\n        console.log('state change');  \n       },\n  \n    getState () {\n        return this._state;\n    },\n    subscribe (observe) {\n        this._callSubscriber = observe;\n    },\n\n    dispatch(action) {\n        if (action.type === 'ADD-POST') {\n            let newPost = {\n                id:5,\n                message: this._state.profilePage.newPostText,\n                likeCount: 0\n            }\n            this._state.profilePage.posts.push(newPost);\n            this._state.profilePage.newPostText='';\n            this._callSubscriber(this._state);\n        } else if (action.type === 'UPDATE-NEW-POST-TEXT' ) {\n            this._state.profilePage.newPostText=action.newText;\n            this._callSubscriber(this._state);\n        }\n    }\n}\n\nexport let addPostActionCreator = () => {\n    return {\n      type: 'ADD-POST'\n    }\n  }\n  \nexport  let updateNewPostActionCreator = (text) => {\n    return {\n      type: 'UPDATE-NEW-POST-TEXT', newText: text\n    }\n  }\n\n\nexport default store;\nwindow.store = store;"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { profileAPI, userAPI } from \"../api/api\";\nconst ADD_POST = 'ADD-POST';\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\nconst SET_STATUS = 'SET_STATUS';\nlet initialState = {\n  posts: [{\n    id: 1,\n    message: 'Hi, how are you',\n    likeCount: 2\n  }, {\n    id: 2,\n    message: 'Its my first post!',\n    likeCount: 3\n  }],\n  profile: null,\n  status: ''\n};\n\nconst profileReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case ADD_POST:\n      {\n        let newPost = {\n          id: 5,\n          message: action.newPostText,\n          likeCount: 0\n        };\n        return { ...state,\n          posts: [...state.posts, newPost]\n        };\n      }\n\n    case SET_USER_PROFILE:\n      {\n        return { ...state,\n          profile: action.profile\n        };\n      }\n\n    case SET_STATUS:\n      {\n        return { ...state,\n          status: action.status\n        };\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport const addPostActionCreator = newPostText => ({\n  type: ADD_POST,\n  newPostText\n});\nexport const setUserProfile = profile => ({\n  type: SET_USER_PROFILE,\n  profile\n});\nexport const setStatus = status => ({\n  type: SET_STATUS,\n  status\n});\nexport const getUserProfile = userId => async dispach => {\n  let response = await userAPI.getProfile(userId);\n  dispach(setUserProfile(response.data));\n};\nexport const getStatus = userId => {\n  return dispach => {\n    profileAPI.getStatus(userId).then(response => {\n      dispach(setStatus(response.data));\n    });\n  };\n};\nexport const updateStatus = status => {\n  return dispach => {\n    profileAPI.updateStatus(status).then(response => {\n      if (response.data === 0) {\n        dispach(setStatus(status));\n      }\n    });\n  };\n};\nexport default profileReducer;","map":{"version":3,"sources":["/Users/admin/Desktop/react-pr/src/redux/profile-reducer.js"],"names":["profileAPI","userAPI","ADD_POST","SET_USER_PROFILE","SET_STATUS","initialState","posts","id","message","likeCount","profile","status","profileReducer","state","action","type","newPost","newPostText","addPostActionCreator","setUserProfile","setStatus","getUserProfile","userId","dispach","response","getProfile","data","getStatus","then","updateStatus"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,OAArB,QAAoC,YAApC;AAEA,MAAMC,QAAQ,GAAG,UAAjB;AACA,MAAMC,gBAAgB,GAAG,kBAAzB;AACA,MAAMC,UAAU,GAAG,YAAnB;AAEA,IAAIC,YAAY,GAAG;AACfC,EAAAA,KAAK,EAAE,CACH;AAAEC,IAAAA,EAAE,EAAE,CAAN;AAASC,IAAAA,OAAO,EAAE,iBAAlB;AAAqCC,IAAAA,SAAS,EAAE;AAAhD,GADG,EAEH;AAAEF,IAAAA,EAAE,EAAE,CAAN;AAASC,IAAAA,OAAO,EAAE,oBAAlB;AAAwCC,IAAAA,SAAS,EAAE;AAAnD,GAFG,CADQ;AAKfC,EAAAA,OAAO,EAAE,IALM;AAMfC,EAAAA,MAAM,EAAE;AANO,CAAnB;;AASA,MAAMC,cAAc,GAAG,YAAkC;AAAA,MAAjCC,KAAiC,uEAAzBR,YAAyB;AAAA,MAAXS,MAAW;;AACrD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKb,QAAL;AAAe;AACX,YAAIc,OAAO,GAAG;AACVT,UAAAA,EAAE,EAAE,CADM;AAEVC,UAAAA,OAAO,EAAEM,MAAM,CAACG,WAFN;AAGVR,UAAAA,SAAS,EAAE;AAHD,SAAd;AAKA,eAAO,EACH,GAAGI,KADA;AAEHP,UAAAA,KAAK,EAAE,CAAC,GAAGO,KAAK,CAACP,KAAV,EAAiBU,OAAjB;AAFJ,SAAP;AAKH;;AACD,SAAKb,gBAAL;AAAuB;AACnB,eAAO,EACH,GAAGU,KADA;AAEHH,UAAAA,OAAO,EAAEI,MAAM,CAACJ;AAFb,SAAP;AAIH;;AACD,SAAKN,UAAL;AAAiB;AACb,eAAO,EACH,GAAGS,KADA;AAEHF,UAAAA,MAAM,EAAEG,MAAM,CAACH;AAFZ,SAAP;AAIH;;AACD;AACI,aAAOE,KAAP;AA1BR;AA4BH,CA7BD;;AA+BA,OAAO,MAAMK,oBAAoB,GAAID,WAAD,KAAkB;AAAEF,EAAAA,IAAI,EAAEb,QAAR;AAAiBe,EAAAA;AAAjB,CAAlB,CAA7B;AACP,OAAO,MAAME,cAAc,GAAIT,OAAD,KAAc;AAAEK,EAAAA,IAAI,EAAEZ,gBAAR;AAA0BO,EAAAA;AAA1B,CAAd,CAAvB;AACP,OAAO,MAAMU,SAAS,GAAIT,MAAD,KAAa;AAAEI,EAAAA,IAAI,EAAEX,UAAR;AAAoBO,EAAAA;AAApB,CAAb,CAAlB;AAEP,OAAO,MAAMU,cAAc,GAAIC,MAAD,IAAY,MAAOC,OAAP,IAAmB;AACtD,MAAIC,QAAQ,GAAG,MAAMvB,OAAO,CAACwB,UAAR,CAAmBH,MAAnB,CAArB;AACSC,EAAAA,OAAO,CAACJ,cAAc,CAACK,QAAQ,CAACE,IAAV,CAAf,CAAP;AACd,CAHK;AAMP,OAAO,MAAMC,SAAS,GAAIL,MAAD,IAAY;AACjC,SAAQC,OAAD,IAAa;AAChBvB,IAAAA,UAAU,CAAC2B,SAAX,CAAqBL,MAArB,EACKM,IADL,CACUJ,QAAQ,IAAI;AACdD,MAAAA,OAAO,CAACH,SAAS,CAACI,QAAQ,CAACE,IAAV,CAAV,CAAP;AACH,KAHL;AAIH,GALD;AAMH,CAPM;AAQP,OAAO,MAAMG,YAAY,GAAIlB,MAAD,IAAY;AACpC,SAAQY,OAAD,IAAa;AAChBvB,IAAAA,UAAU,CAAC6B,YAAX,CAAwBlB,MAAxB,EACKiB,IADL,CACUJ,QAAQ,IAAI;AACd,UAAGA,QAAQ,CAACE,IAAT,KAAkB,CAArB,EAAwB;AACpBH,QAAAA,OAAO,CAACH,SAAS,CAACT,MAAD,CAAV,CAAP;AACH;AACJ,KALL;AAMH,GAPD;AAQH,CATM;AAYP,eAAeC,cAAf","sourcesContent":["import { profileAPI, userAPI } from \"../api/api\";\n\nconst ADD_POST = 'ADD-POST';\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\nconst SET_STATUS = 'SET_STATUS';\n\nlet initialState = {\n    posts: [\n        { id: 1, message: 'Hi, how are you', likeCount: 2 },\n        { id: 2, message: 'Its my first post!', likeCount: 3 },\n    ],\n    profile: null,\n    status: ''\n}\n\nconst profileReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case ADD_POST: {\n            let newPost = {\n                id: 5,\n                message: action.newPostText,\n                likeCount: 0\n            }\n            return {\n                ...state,\n                posts: [...state.posts, newPost],\n                \n            };\n        }\n        case SET_USER_PROFILE: {\n            return {\n                ...state,\n                profile: action.profile\n            };\n        }\n        case SET_STATUS: {\n            return {\n                ...state,\n                status: action.status\n            };\n        }\n        default:\n            return state;\n    }\n}\n\nexport const addPostActionCreator = (newPostText) => ({ type: ADD_POST,newPostText })\nexport const setUserProfile = (profile) => ({ type: SET_USER_PROFILE, profile })\nexport const setStatus = (status) => ({ type: SET_STATUS, status })\n\nexport const getUserProfile = (userId) => async (dispach) => {\n       let response = await userAPI.getProfile(userId)\n                dispach(setUserProfile(response.data));        \n }\n\n\nexport const getStatus = (userId) => {\n    return (dispach) => {\n        profileAPI.getStatus(userId)\n            .then(response => {\n                dispach(setStatus(response.data));\n            });\n    }\n}\nexport const updateStatus = (status) => {\n    return (dispach) => {\n        profileAPI.updateStatus(status)\n            .then(response => {\n                if(response.data === 0) {\n                    dispach(setStatus(status));\n                }     \n            });\n    }\n}\n\n\nexport default profileReducer;\n"]},"metadata":{},"sourceType":"module"}
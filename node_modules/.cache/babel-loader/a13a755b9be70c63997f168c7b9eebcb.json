{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Documents/MyPrograms/ReactProject/social-network-demo/src/components/common/Paginator/Paginator.js\",\n    _s = $RefreshSig$();\n\nimport cn from \"classnames\";\nimport React, { useState } from \"react\";\nimport styles from './Paginator.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nlet Paginator = _ref => {\n  _s();\n\n  let {\n    totalUsersCount,\n    pageSize,\n    currentPage,\n    onPageChanged,\n    portionSize = 10\n  } = _ref;\n  let pageCount = Math.ceil(totalUsersCount / pageSize);\n  let pages = [];\n\n  for (let i = 1; i <= pageCount; i++) {\n    pages.push(i);\n  }\n\n  let portionCount = Math.ceil(pageCount / portionSize);\n  let [portionNumber, setPortionNumber] = useState(1);\n  let leftPortionPageNumber = (portionNumber - 1) * portionSize;\n  let rightPortionPageNumber = portionNumber * portionSize;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.paginator,\n    children: [portionNumber > 1 && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        setPortionNumber(portionNumber - 1);\n      },\n      children: \"Prev\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this), pages.filter(p => p >= leftPortionPageNumber && p <= rightPortionPageNumber).map(p => {\n      return /*#__PURE__*/_jsxDEV(\"span\", {\n        className: cn({\n          [styles.selectedPage]: currentPage === p\n        }, styles.pageNumber),\n        onClick: e => {\n          onPageChanged(p);\n        },\n        children: p\n      }, p, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 24\n      }, this);\n    }), portionCount > portionNumber && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        setPortionNumber(portionNumber + 1);\n      },\n      children: \"Next\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 13\n  }, this);\n};\n\n_s(Paginator, \"8p8zb1vvZvsuWyQQS16DuuzsJLU=\");\n\n_c = Paginator;\nexport default Paginator;\n\nvar _c;\n\n$RefreshReg$(_c, \"Paginator\");","map":{"version":3,"sources":["/Users/admin/Documents/MyPrograms/ReactProject/social-network-demo/src/components/common/Paginator/Paginator.js"],"names":["cn","React","useState","styles","Paginator","totalUsersCount","pageSize","currentPage","onPageChanged","portionSize","pageCount","Math","ceil","pages","i","push","portionCount","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","paginator","filter","p","map","selectedPage","pageNumber","e"],"mappings":";;;AAAA,OAAOA,EAAP,MAAe,YAAf;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,OAAOC,MAAP,MAAmB,wBAAnB;;;AAGA,IAAIC,SAAS,GAAG,QAA2E;AAAA;;AAAA,MAA1E;AAACC,IAAAA,eAAD;AAAiBC,IAAAA,QAAjB;AAA2BC,IAAAA,WAA3B;AAAwCC,IAAAA,aAAxC;AAAsDC,IAAAA,WAAW,GAAC;AAAlE,GAA0E;AACvF,MAAIC,SAAS,GAAGC,IAAI,CAACC,IAAL,CAAUP,eAAe,GAAGC,QAA5B,CAAhB;AAEA,MAAIO,KAAK,GAAG,EAAZ;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAIJ,SAArB,EAAgCI,CAAC,EAAjC,EAAqC;AACjCD,IAAAA,KAAK,CAACE,IAAN,CAAWD,CAAX;AACH;;AAED,MAAIE,YAAY,GAAGL,IAAI,CAACC,IAAL,CAAUF,SAAS,GAAGD,WAAtB,CAAnB;AACA,MAAI,CAACQ,aAAD,EAAgBC,gBAAhB,IAAoChB,QAAQ,CAAC,CAAD,CAAhD;AACA,MAAIiB,qBAAqB,GAAG,CAACF,aAAa,GAAG,CAAjB,IAAsBR,WAAlD;AACA,MAAIW,sBAAsB,GAAGH,aAAa,GAAGR,WAA7C;AAGA,sBAAQ;AAAK,IAAA,SAAS,EAAEN,MAAM,CAACkB,SAAvB;AAAA,eACEJ,aAAa,GAAG,CAAhB,iBACF;AAAQ,MAAA,OAAO,EAAE,MAAI;AAAEC,QAAAA,gBAAgB,CAACD,aAAa,GAAC,CAAf,CAAhB;AAAmC,OAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFA,EAIEJ,KAAK,CACNS,MADC,CACMC,CAAC,IAAGA,CAAC,IAAEJ,qBAAH,IAA4BI,CAAC,IAAEH,sBADzC,EAEDI,GAFC,CAEID,CAAD,IAAK;AACN,0BAAO;AAAM,QAAA,SAAS,EAAEvB,EAAE,CAAC;AACvB,WAACG,MAAM,CAACsB,YAAR,GAAuBlB,WAAW,KAAKgB;AADhB,SAAD,EAEvBpB,MAAM,CAACuB,UAFgB,CAAnB;AAIP,QAAA,OAAO,EAAGC,CAAD,IAAK;AAACnB,UAAAA,aAAa,CAACe,CAAD,CAAb;AAAiB,SAJzB;AAAA,kBAI4BA;AAJ5B,SAGFA,CAHE;AAAA;AAAA;AAAA;AAAA,cAAP;AAKH,KARC,CAJF,EAaCP,YAAY,GAACC,aAAb,iBACD;AAAQ,MAAA,OAAO,EAAE,MAAI;AAACC,QAAAA,gBAAgB,CAACD,aAAa,GAAC,CAAf,CAAhB;AAAkC,OAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAdA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAR;AAgBH,CA9BD;;GAAIb,S;;KAAAA,S;AA+BJ,eAAeA,SAAf","sourcesContent":["import cn from \"classnames\";\nimport React, { useState } from \"react\";\n\nimport styles from './Paginator.module.css'\n\n\nlet Paginator = ({totalUsersCount,pageSize, currentPage, onPageChanged,portionSize=10}) => {\n    let pageCount = Math.ceil(totalUsersCount / pageSize);\n\n    let pages = [];\n    for (let i = 1; i <= pageCount; i++) {\n        pages.push(i);\n    }\n\n    let portionCount = Math.ceil(pageCount / portionSize);\n    let [portionNumber, setPortionNumber] = useState(1);\n    let leftPortionPageNumber = (portionNumber - 1) * portionSize;\n    let rightPortionPageNumber = portionNumber * portionSize;\n\n\n    return  <div className={styles.paginator}>\n            { portionNumber > 1 && \n            <button onClick={()=>{ setPortionNumber(portionNumber-1) }}>Prev</button>}\n\n            { pages\n            .filter(p=> p>=leftPortionPageNumber && p<=rightPortionPageNumber)\n            .map((p)=>{\n                return <span className={cn({\n                    [styles.selectedPage]: currentPage === p\n                }, styles.pageNumber)}\n                key={p}\n                onClick={(e)=>{onPageChanged(p)}}>{p}</span>\n            })}\n            {portionCount>portionNumber &&\n            <button onClick={()=>{setPortionNumber(portionNumber+1)}}>Next</button>}\n        </div>\n}\nexport default Paginator;\n"]},"metadata":{},"sourceType":"module"}
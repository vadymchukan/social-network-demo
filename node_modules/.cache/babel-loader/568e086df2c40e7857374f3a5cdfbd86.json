{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Desktop/react-pr/src/components/Users/UsersContainer.jsx\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { follow, setCurrentPage, setTotalCount, setUsers, toggleFollowingInProgress, toggletIsFetching, unfollow } from \"../../redux/users-reducer\";\nimport * as axios from \"axios\";\nimport Users from \"./Users\";\nimport Preloader from \"../common/Preloader/Preloader\";\nimport { userAPI } from \"../../api/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass UsersContainer extends React.Component {\n  constructor() {\n    super(...arguments);\n\n    this.onPageChanged = pageNumber => {\n      this.props.setCurrentPage(pageNumber);\n      this.props.toggletIsFetching(true);\n      userAPI.getUsers(pageNumber, this.props.pageSize).then(data => {\n        this.props.toggletIsFetching(false);\n        this.props.setUsers(data.items);\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.props.toggletIsFetching(true);\n    userAPI.getUsers(this.props.currentPage, this.props.pageSize).then(data => {\n      this.props.toggletIsFetching(false);\n      this.props.setUsers(data.items);\n      this.props.setTotalCount(data.totalCount);\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [this.props.isFetching ? /*#__PURE__*/_jsxDEV(Preloader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 31\n      }, this) : null, /*#__PURE__*/_jsxDEV(Users, {\n        totalUsersCount: this.props.totalUsersCount,\n        pageSize: this.props.pageSize,\n        currentPage: this.props.currentPage,\n        onPageChanged: this.onPageChanged,\n        users: this.props.users,\n        unfollow: this.props.unfollow,\n        follow: this.props.follow\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nlet mapStateToProps = state => {\n  return {\n    users: state.usersPage.users,\n    pageSize: state.usersPage.pageSize,\n    totalUsersCount: state.usersPage.totalUsersCount,\n    currentPage: state.usersPage.currentPage,\n    isFetching: state.usersPage.isFetching,\n    followingInProgress: state.usersPage.followingInProgress\n  };\n}; // let mapDispachToProps = (dispatch) => {\n//     return {\n//         follow: (userId) => {\n//             dispatch(followAC(userId));\n//         },\n//         unfollow: (userId) => {\n//             dispatch(unfollowAC(userId));\n//         },\n//         setUsers:(users) => {\n//             dispatch(setUsersAC(users))\n//         },\n//         setCurrentPage: (pageNumber) => {\n//             dispatch(setCurrentPageAC(pageNumber))\n//         },\n//         setTotalCount: (totalCount) => { \n//             dispatch(setTotalCountAC(totalCount))\n//         },\n//         toggletIsFetching: (isFetching) => { \n//             dispatch(toggletIsFetchingAC(isFetching))\n//         }\n// }}\n\n\nexport default connect(mapStateToProps, {\n  follow,\n  unfollow,\n  setUsers,\n  setCurrentPage,\n  setTotalCount,\n  toggletIsFetching,\n  toggleFollowingInProgress\n})(UsersContainer);","map":{"version":3,"sources":["/Users/admin/Desktop/react-pr/src/components/Users/UsersContainer.jsx"],"names":["React","connect","follow","setCurrentPage","setTotalCount","setUsers","toggleFollowingInProgress","toggletIsFetching","unfollow","axios","Users","Preloader","userAPI","UsersContainer","Component","onPageChanged","pageNumber","props","getUsers","pageSize","then","data","items","componentDidMount","currentPage","totalCount","render","isFetching","totalUsersCount","users","mapStateToProps","state","usersPage","followingInProgress"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { follow, setCurrentPage, setTotalCount, setUsers, toggleFollowingInProgress, toggletIsFetching, unfollow } from \"../../redux/users-reducer\";\nimport * as axios from \"axios\";\nimport Users from \"./Users\";\nimport Preloader from \"../common/Preloader/Preloader\";\nimport { userAPI } from \"../../api/api\";\n\n\nclass UsersContainer extends React.Component {\n    componentDidMount() {\n        this.props.toggletIsFetching(true);\n\n       userAPI.getUsers(this.props.currentPage, this.props.pageSize).then(data => {\n            this.props.toggletIsFetching(false);    \n        this.props.setUsers(data.items);\n            this.props.setTotalCount(data.totalCount);\n        });\n    }\n    onPageChanged = (pageNumber) => {\n        this.props.setCurrentPage(pageNumber);\n        this.props.toggletIsFetching(true);\n        userAPI.getUsers(pageNumber, this.props.pageSize).then(data => {\n            this.props.toggletIsFetching(false);   \n        this.props.setUsers(data.items);\n        });\n    }\n    render() {\n    return <>\n    { this.props.isFetching ? <Preloader /> : null }\n    <Users totalUsersCount = {this.props.totalUsersCount}\n    pageSize = {this.props.pageSize}\n    currentPage = {this.props.currentPage}\n    onPageChanged = {this.onPageChanged}\n    users = {this.props.users}\n    unfollow = {this.props.unfollow}\n    follow = {this.props.follow}  />\n    </>\n}}\n\nlet mapStateToProps = (state) => { \n    return {\n        users: state.usersPage.users,\n        pageSize:state.usersPage.pageSize,\n        totalUsersCount:state.usersPage.totalUsersCount,\n        currentPage:state.usersPage.currentPage,\n        isFetching: state.usersPage.isFetching,\n        followingInProgress: state.usersPage.followingInProgress\n    }\n}\n\n// let mapDispachToProps = (dispatch) => {\n//     return {\n//         follow: (userId) => {\n//             dispatch(followAC(userId));\n//         },\n//         unfollow: (userId) => {\n//             dispatch(unfollowAC(userId));\n//         },\n//         setUsers:(users) => {\n//             dispatch(setUsersAC(users))\n//         },\n//         setCurrentPage: (pageNumber) => {\n//             dispatch(setCurrentPageAC(pageNumber))\n//         },\n//         setTotalCount: (totalCount) => { \n//             dispatch(setTotalCountAC(totalCount))\n//         },\n//         toggletIsFetching: (isFetching) => { \n//             dispatch(toggletIsFetchingAC(isFetching))\n//         }\n        \n        \n// }}\n\n\nexport default connect (mapStateToProps, {follow, unfollow, setUsers, setCurrentPage, setTotalCount, toggletIsFetching, toggleFollowingInProgress})\n(UsersContainer)"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Desktop/react-pr/src/components/Dialogs/DialogsContainer.jsx\";\nimport React from \"react\";\nimport DialogItem from \"./DialogItem/DialogItem\";\nimport Message from \"./Message/Message\";\nimport { updateNewMessageBodyCreator, sendMessageCreator } from \"../../redux/dialogs-reducer\";\nimport Dialogs from \"./Dialogs\";\nimport { connect } from \"react-redux\";\nimport { widthAuthRedirect } from \"../../hoc/withAuthRedirect\";\nimport { compose } from \"redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\n/*#__PURE__*/\n_jsxDEV(DialogItem, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 10,\n  columnNumber: 1\n}, this);\n\n/*#__PURE__*/\n_jsxDEV(Message, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 12,\n  columnNumber: 1\n}, this);\n\nlet mapStateToProps = state => {\n  return {\n    dialogsPage: state.dialogsPage\n  };\n};\n\nlet mapDispatchToProps = dispatch => {\n  return {\n    updateNewMessageBody: body => {\n      dispatch(updateNewMessageBodyCreator(body));\n    },\n    sendMessage: () => {\n      dispatch(sendMessageCreator());\n    }\n  };\n};\n\nlet AuthRedirectComponent = widthAuthRedirect(Dialogs); // let AuthRedirectComponent = (props) =>{\n//     if (!this.props.isAuth) return <Navigate to='/login' />\n//     return <Dialogs {...props}/>\n// }\n\n_c = AuthRedirectComponent;\ncompose(connect(mapStateToProps, mapDispatchToProps), widthAuthRedirect)(Dialogs);\nconst DialogsContainer = connect(mapStateToProps, mapDispatchToProps)(AuthRedirectComponent);\nexport default DialogsContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthRedirectComponent\");","map":{"version":3,"sources":["/Users/admin/Desktop/react-pr/src/components/Dialogs/DialogsContainer.jsx"],"names":["React","DialogItem","Message","updateNewMessageBodyCreator","sendMessageCreator","Dialogs","connect","widthAuthRedirect","compose","mapStateToProps","state","dialogsPage","mapDispatchToProps","dispatch","updateNewMessageBody","body","sendMessage","AuthRedirectComponent","DialogsContainer"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACC,SAASC,2BAAT,EAAsCC,kBAAtC,QAAgE,6BAAhE;AACD,OAAOC,OAAP,MAAoB,WAApB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,iBAAT,QAAkC,4BAAlC;AACA,SAASC,OAAT,QAAwB,OAAxB;;;AAEA;AAAA,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA;;AAEA;AAAA,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA;;AAGA,IAAIC,eAAe,GAAIC,KAAD,IAAW;AAC7B,SAAO;AACHC,IAAAA,WAAW,EAAED,KAAK,CAACC;AADhB,GAAP;AAGH,CAJD;;AAMA,IAAIC,kBAAkB,GAAIC,QAAD,IAAc;AACnC,SAAO;AACHC,IAAAA,oBAAoB,EAAGC,IAAD,IAAU;AAC5BF,MAAAA,QAAQ,CAACV,2BAA2B,CAACY,IAAD,CAA5B,CAAR;AACH,KAHE;AAIHC,IAAAA,WAAW,EAAE,MAAI;AACbH,MAAAA,QAAQ,CAACT,kBAAkB,EAAnB,CAAR;AACH;AANE,GAAP;AAQH,CATD;;AAWA,IAAIa,qBAAqB,GAAGV,iBAAiB,CAACF,OAAD,CAA7C,C,CACA;AACA;AACA;AACA;;KAJIY,qB;AAKJT,OAAO,CACHF,OAAO,CAACG,eAAD,EAAkBG,kBAAlB,CADJ,EAEHL,iBAFG,CAAP,CAGEF,OAHF;AAMA,MAAMa,gBAAgB,GAAGZ,OAAO,CAACG,eAAD,EAAkBG,kBAAlB,CAAP,CAA8CK,qBAA9C,CAAzB;AAEA,eAAeC,gBAAf","sourcesContent":["import React from \"react\";\nimport DialogItem from \"./DialogItem/DialogItem\";\nimport Message from \"./Message/Message\";\n import { updateNewMessageBodyCreator, sendMessageCreator } from \"../../redux/dialogs-reducer\";\nimport Dialogs from \"./Dialogs\";\nimport { connect } from \"react-redux\";\nimport { widthAuthRedirect } from \"../../hoc/withAuthRedirect\";\nimport { compose } from \"redux\";\n\n<DialogItem />;\n\n<Message />;\n\n\nlet mapStateToProps = (state) => {\n    return {\n        dialogsPage: state.dialogsPage\n    }\n}\n\nlet mapDispatchToProps = (dispatch) => {\n    return {\n        updateNewMessageBody: (body) => {\n            dispatch(updateNewMessageBodyCreator(body));\n        },\n        sendMessage: ()=>{     \n            dispatch(sendMessageCreator());\n        }\n    }\n}\n\nlet AuthRedirectComponent = widthAuthRedirect(Dialogs)\n// let AuthRedirectComponent = (props) =>{\n//     if (!this.props.isAuth) return <Navigate to='/login' />\n//     return <Dialogs {...props}/>\n// }\ncompose(\n    connect(mapStateToProps, mapDispatchToProps),\n    widthAuthRedirect\n)(Dialogs);\n\n\nconst DialogsContainer = connect(mapStateToProps, mapDispatchToProps) (AuthRedirectComponent);\n\nexport default DialogsContainer;\n\n"]},"metadata":{},"sourceType":"module"}
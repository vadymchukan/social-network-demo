{"ast":null,"code":"let store = {\n  _state: {\n    profilePage: {\n      posts: [{\n        id: 1,\n        message: 'Hi, how are you',\n        likeCount: 2\n      }, {\n        id: 2,\n        message: 'Its my first post!',\n        likeCount: 3\n      }],\n      newPostText: 'Napisz text'\n    },\n    dialogsPage: {\n      messages: [{\n        id: 1,\n        message: 'Hi'\n      }, {\n        id: 2,\n        message: 'How a you'\n      }, {\n        id: 3,\n        message: 'Yo'\n      }],\n      dialogs: [{\n        id: 1,\n        name: 'Vadym'\n      }, {\n        id: 2,\n        name: 'Klaudia'\n      }, {\n        id: 3,\n        name: 'Maksim'\n      }]\n    },\n    sidebar: {}\n  },\n\n  rerenderEntireTree() {\n    console.log('state change');\n  }\n\n}; // let rerenderEntireTree = ()=>{\n//  console.log('state change');  \n// }\n// let state = {\n//     profilePage: {\n//         posts: [\n//             { id: 1, message: 'Hi, how are you', likeCount: 2 },\n//             { id: 2, message: 'Its my first post!', likeCount: 3 },\n//         ],\n//         newPostText:'Napisz text'\n//     },\n//     dialogsPage: {\n//         messages: [\n//             { id: 1, message: 'Hi' },\n//             { id: 2, message: 'How a you' },\n//             { id: 3, message: 'Yo' }\n//         ],\n//         dialogs: [\n//             { id: 1, name: 'Vadym' },\n//             { id: 2, name: 'Klaudia' },\n//             { id: 3, name: 'Maksim' }\n//         ]\n//     },\n//     sidebar: {}\n// }\n\nwindow.state = state;\nexport const addPost = () => {\n  let newPost = {\n    id: 5,\n    message: state.profilePage.newPostText,\n    likeCount: 0\n  };\n  state.profilePage.posts.push(newPost);\n  state.profilePage.newPostText = '';\n  rerenderEntireTree(state);\n};\nexport const updateNewPostText = newText => {\n  state.profilePage.newPostText = newText;\n  rerenderEntireTree(state);\n};\nexport const subscribe = observe => {\n  rerenderEntireTree = observe;\n};\nexport default state;","map":{"version":3,"sources":["/Users/vadymchukan/Desktop/www/react-start/react-pr/src/redux/state.js"],"names":["store","_state","profilePage","posts","id","message","likeCount","newPostText","dialogsPage","messages","dialogs","name","sidebar","rerenderEntireTree","console","log","window","state","addPost","newPost","push","updateNewPostText","newText","subscribe","observe"],"mappings":"AAAA,IAAIA,KAAK,GAAG;AACRC,EAAAA,MAAM,EAAE;AACJC,IAAAA,WAAW,EAAE;AACTC,MAAAA,KAAK,EAAE,CACH;AAAEC,QAAAA,EAAE,EAAE,CAAN;AAASC,QAAAA,OAAO,EAAE,iBAAlB;AAAqCC,QAAAA,SAAS,EAAE;AAAhD,OADG,EAEH;AAAEF,QAAAA,EAAE,EAAE,CAAN;AAASC,QAAAA,OAAO,EAAE,oBAAlB;AAAwCC,QAAAA,SAAS,EAAE;AAAnD,OAFG,CADE;AAKTC,MAAAA,WAAW,EAAC;AALH,KADT;AAQJC,IAAAA,WAAW,EAAE;AACTC,MAAAA,QAAQ,EAAE,CACN;AAAEL,QAAAA,EAAE,EAAE,CAAN;AAASC,QAAAA,OAAO,EAAE;AAAlB,OADM,EAEN;AAAED,QAAAA,EAAE,EAAE,CAAN;AAASC,QAAAA,OAAO,EAAE;AAAlB,OAFM,EAGN;AAAED,QAAAA,EAAE,EAAE,CAAN;AAASC,QAAAA,OAAO,EAAE;AAAlB,OAHM,CADD;AAMTK,MAAAA,OAAO,EAAE,CACL;AAAEN,QAAAA,EAAE,EAAE,CAAN;AAASO,QAAAA,IAAI,EAAE;AAAf,OADK,EAEL;AAAEP,QAAAA,EAAE,EAAE,CAAN;AAASO,QAAAA,IAAI,EAAE;AAAf,OAFK,EAGL;AAAEP,QAAAA,EAAE,EAAE,CAAN;AAASO,QAAAA,IAAI,EAAE;AAAf,OAHK;AANA,KART;AAoBJC,IAAAA,OAAO,EAAE;AApBL,GADA;;AAuBRC,EAAAA,kBAAkB,GAAG;AACjBC,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACA;;AAzBI,CAAZ,C,CA+BA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEAC,MAAM,CAACC,KAAP,GAAeA,KAAf;AAEA,OAAO,MAAMC,OAAO,GAAG,MAAI;AACvB,MAAIC,OAAO,GAAG;AACVf,IAAAA,EAAE,EAAC,CADO;AAEVC,IAAAA,OAAO,EAAEY,KAAK,CAACf,WAAN,CAAkBK,WAFjB;AAGVD,IAAAA,SAAS,EAAE;AAHD,GAAd;AAKAW,EAAAA,KAAK,CAACf,WAAN,CAAkBC,KAAlB,CAAwBiB,IAAxB,CAA6BD,OAA7B;AACAF,EAAAA,KAAK,CAACf,WAAN,CAAkBK,WAAlB,GAA8B,EAA9B;AACAM,EAAAA,kBAAkB,CAACI,KAAD,CAAlB;AACH,CATM;AAWP,OAAO,MAAMI,iBAAiB,GAAIC,OAAD,IAAW;AACxCL,EAAAA,KAAK,CAACf,WAAN,CAAkBK,WAAlB,GAA8Be,OAA9B;AACAT,EAAAA,kBAAkB,CAACI,KAAD,CAAlB;AACH,CAHM;AAKP,OAAO,MAAMM,SAAS,GAAIC,OAAD,IAAY;AACjCX,EAAAA,kBAAkB,GAAGW,OAArB;AACH,CAFM;AAIP,eAAeP,KAAf","sourcesContent":["let store = {\n    _state: {\n        profilePage: {\n            posts: [\n                { id: 1, message: 'Hi, how are you', likeCount: 2 },\n                { id: 2, message: 'Its my first post!', likeCount: 3 },\n            ],\n            newPostText:'Napisz text'\n        },\n        dialogsPage: {\n            messages: [\n                { id: 1, message: 'Hi' },\n                { id: 2, message: 'How a you' },\n                { id: 3, message: 'Yo' }\n            ],\n            dialogs: [\n                { id: 1, name: 'Vadym' },\n                { id: 2, name: 'Klaudia' },\n                { id: 3, name: 'Maksim' }\n            ]\n        },\n        sidebar: {}\n    },\n    rerenderEntireTree() {\n        console.log('state change');  \n       }\n}\n\n\n\n\n// let rerenderEntireTree = ()=>{\n//  console.log('state change');  \n// }\n\n// let state = {\n//     profilePage: {\n//         posts: [\n//             { id: 1, message: 'Hi, how are you', likeCount: 2 },\n//             { id: 2, message: 'Its my first post!', likeCount: 3 },\n//         ],\n//         newPostText:'Napisz text'\n//     },\n//     dialogsPage: {\n//         messages: [\n//             { id: 1, message: 'Hi' },\n//             { id: 2, message: 'How a you' },\n//             { id: 3, message: 'Yo' }\n//         ],\n//         dialogs: [\n//             { id: 1, name: 'Vadym' },\n//             { id: 2, name: 'Klaudia' },\n//             { id: 3, name: 'Maksim' }\n//         ]\n//     },\n//     sidebar: {}\n// }\n\nwindow.state = state;\n\nexport const addPost = ()=>{\n    let newPost = {\n        id:5,\n        message: state.profilePage.newPostText,\n        likeCount: 0\n    }\n    state.profilePage.posts.push(newPost);\n    state.profilePage.newPostText='';\n    rerenderEntireTree(state);\n}\n\nexport const updateNewPostText = (newText)=>{\n    state.profilePage.newPostText=newText;\n    rerenderEntireTree(state);\n}\n\nexport const subscribe = (observe) =>{\n    rerenderEntireTree = observe;\n}\n\nexport default state;"]},"metadata":{},"sourceType":"module"}
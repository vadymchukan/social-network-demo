{"ast":null,"code":"import { stopSubmit } from \"redux-form\";\nimport { authAPI } from \"../api/api\";\nimport { getAuthUserData } from \"./auth-reducer\";\nconst INITIALIZED_SUCCESS = 'INITIALIZED_SUCCESS';\nlet initialState = {\n  initialized: false\n};\n\nconst appReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case INITIALIZED_SUCCESS:\n      return { ...state,\n        ...action.payload\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport const initializedSuccess = () => ({\n  type: INITIALIZED_SUCCESS\n});\nexport const initializeApp = () => {\n  return dispach => {\n    dispach(getAuthUserData());\n  };\n};\nexport default appReducer;","map":{"version":3,"sources":["/Users/admin/Desktop/react-pr/src/redux/app-reducer.js"],"names":["stopSubmit","authAPI","getAuthUserData","INITIALIZED_SUCCESS","initialState","initialized","appReducer","state","action","type","payload","initializedSuccess","initializeApp","dispach"],"mappings":"AAAA,SAASA,UAAT,QAA2B,YAA3B;AACA,SAASC,OAAT,QAAwB,YAAxB;AACA,SAASC,eAAT,QAAgC,gBAAhC;AAEA,MAAMC,mBAAmB,GAAG,qBAA5B;AAEA,IAAIC,YAAY,GAAG;AACfC,EAAAA,WAAW,EAAC;AADG,CAAnB;;AAIA,MAAMC,UAAU,GAAG,YAAkC;AAAA,MAAjCC,KAAiC,uEAAzBH,YAAyB;AAAA,MAAXI,MAAW;;AAEjD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKN,mBAAL;AACI,aAAO,EACH,GAAGI,KADA;AAEH,WAAGC,MAAM,CAACE;AAFP,OAAP;;AAIJ;AACI,aAAOH,KAAP;AAPR;AASH,CAXD;;AAaA,OAAO,MAAMI,kBAAkB,GAAG,OAAO;AAAEF,EAAAA,IAAI,EAAEN;AAAR,CAAP,CAA3B;AAEP,OAAO,MAAMS,aAAa,GAAG,MAAI;AAC7B,SAAQC,OAAD,IAAW;AAChBA,IAAAA,OAAO,CAACX,eAAe,EAAhB,CAAP;AACD,GAFD;AAGH,CAJM;AASP,eAAeI,UAAf","sourcesContent":["import { stopSubmit } from \"redux-form\";\nimport { authAPI } from \"../api/api\";\nimport { getAuthUserData } from \"./auth-reducer\";\n\nconst INITIALIZED_SUCCESS = 'INITIALIZED_SUCCESS';\n\nlet initialState = {\n    initialized:false\n}\n\nconst appReducer = (state = initialState, action) => {\n\n    switch (action.type) {\n        case INITIALIZED_SUCCESS:\n            return {\n                ...state, \n                ...action.payload           \n            }\n        default:\n            return state;\n    }\n}\n\nexport const initializedSuccess = () => ({ type: INITIALIZED_SUCCESS})\n\nexport const initializeApp = ()=>{\n    return (dispach)=>{\n      dispach(getAuthUserData());\n    }\n}\n\n\n\n\nexport default appReducer;"]},"metadata":{},"sourceType":"module"}
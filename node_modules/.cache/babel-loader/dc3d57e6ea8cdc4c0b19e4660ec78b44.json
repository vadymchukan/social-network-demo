{"ast":null,"code":"import React,{Component}from\"react\";import s from'./MyPosts.module.css';import Post from\"./Post/Post\";import{Field,reduxForm}from\"redux-form\";import{maxLenghtCreator,required}from\"../../../units/validators/validators\";import{TextArea}from\"../../common/FormsControls/FormsControls\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var maxLenght10=maxLenghtCreator(10);var MyPosts=/*#__PURE__*/React.memo(function(props){var postsElement=props.posts.map(function(p){return/*#__PURE__*/_jsx(Post,{message:p.message,likeCount:p.likeCount});});var newPostElement=/*#__PURE__*/React.createRef();var onAddPost=function onAddPost(values){props.addPost(values.newPostText);};return/*#__PURE__*/_jsxs(\"div\",{className:s.postsBlock,children:[/*#__PURE__*/_jsx(\"h3\",{children:\"My post\"}),/*#__PURE__*/_jsx(PostFormRedux,{onSubmit:onAddPost}),/*#__PURE__*/_jsx(\"div\",{className:s.posts,children:postsElement})]});});// class MyPosts extends PureComponent {\n// // shouldComponentUpdate(nextProps, nextState){\n// //   return nextProps != this.props || nextState != this.props; \n// // }\n//   render(){\n//     let postsElement = this.props.posts.map(p => <Post message={p.message} likeCount={p.likeCount} />);\n//     let newPostElement = React.createRef();\n//     let onAddPost = (values) => {\n//       this.props.addPost(values.newPostText);\n//     }\n//     return <div className={s.postsBlock}>\n//       <h3>My post</h3>\n//       <PostFormRedux onSubmit={ onAddPost } />\n//       <div className={s.posts}>\n//         {postsElement}\n//       </div>\n//     </div>\n//   }\n// }\nvar addNewPostForm=function addNewPostForm(props){return/*#__PURE__*/_jsxs(\"form\",{action:\"\",onSubmit:props.handleSubmit,children:[/*#__PURE__*/_jsx(Field,{placeholder:\"Enter your message\",name:\"newPostText\",component:TextArea,validate:[required,maxLenght10]}),/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"button\",{children:\"Add post\"})})]});};var PostFormRedux=reduxForm({form:'prfileMessageForm'})(addNewPostForm);export default MyPosts;","map":{"version":3,"sources":["/Users/admin/Desktop/react-pr/src/components/Profile/MyPosts/MyPosts.jsx"],"names":["React","Component","s","Post","Field","reduxForm","maxLenghtCreator","required","TextArea","maxLenght10","MyPosts","memo","props","postsElement","posts","map","p","message","likeCount","newPostElement","createRef","onAddPost","values","addPost","newPostText","postsBlock","addNewPostForm","handleSubmit","PostFormRedux","form"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,MAAOC,CAAAA,CAAP,KAAc,sBAAd,CACA,MAAOC,CAAAA,IAAP,KAAiB,aAAjB,CACA,OAASC,KAAT,CAAgBC,SAAhB,KAAiC,YAAjC,CACA,OAASC,gBAAT,CAA2BC,QAA3B,KAA2C,sCAA3C,CACA,OAASC,QAAT,KAAyB,0CAAzB,C,wFAGA,GAAMC,CAAAA,WAAW,CAAGH,gBAAgB,CAAC,EAAD,CAApC,CAEA,GAAMI,CAAAA,OAAO,cAAGV,KAAK,CAACW,IAAN,CAAW,SAAAC,KAAK,CAAI,CAClC,GAAIC,CAAAA,YAAY,CAAGD,KAAK,CAACE,KAAN,CAAYC,GAAZ,CAAgB,SAAAC,CAAC,qBAAI,KAAC,IAAD,EAAM,OAAO,CAAEA,CAAC,CAACC,OAAjB,CAA0B,SAAS,CAAED,CAAC,CAACE,SAAvC,EAAJ,EAAjB,CAAnB,CACA,GAAIC,CAAAA,cAAc,cAAGnB,KAAK,CAACoB,SAAN,EAArB,CACA,GAAIC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,CAACC,MAAD,CAAY,CAC1BV,KAAK,CAACW,OAAN,CAAcD,MAAM,CAACE,WAArB,EACD,CAFD,CAGA,mBACA,aAAK,SAAS,CAAEtB,CAAC,CAACuB,UAAlB,wBACE,+BADF,cAEE,KAAC,aAAD,EAAe,QAAQ,CAAGJ,SAA1B,EAFF,cAGE,YAAK,SAAS,CAAEnB,CAAC,CAACY,KAAlB,UACGD,YADH,EAHF,GADA,CAQD,CAde,CAAhB,CAgBA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA,GAAMa,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,CAACd,KAAD,CAAW,CAChC,mBACA,cAAM,MAAM,CAAC,EAAb,CAAgB,QAAQ,CAAEA,KAAK,CAACe,YAAhC,wBACI,KAAC,KAAD,EAAO,WAAW,CAAC,oBAAnB,CAAwC,IAAI,CAAC,aAA7C,CAA2D,SAAS,CAAEnB,QAAtE,CACA,QAAQ,CAAI,CAACD,QAAD,CAAWE,WAAX,CADZ,EADJ,cAGI,kCACA,oCADA,EAHJ,GADA,CASD,CAVD,CAYA,GAAMmB,CAAAA,aAAa,CAAGvB,SAAS,CAAC,CAACwB,IAAI,CAAE,mBAAP,CAAD,CAAT,CAAuCH,cAAvC,CAAtB,CAEA,cAAehB,CAAAA,OAAf","sourcesContent":["import React, { Component } from \"react\";\nimport s from './MyPosts.module.css';\nimport Post from \"./Post/Post\";\nimport { Field, reduxForm } from \"redux-form\";\nimport { maxLenghtCreator, required } from \"../../../units/validators/validators\";\nimport { TextArea } from \"../../common/FormsControls/FormsControls\";\n\n\nconst maxLenght10 = maxLenghtCreator(10);\n\nconst MyPosts = React.memo(props => {\n  let postsElement = props.posts.map(p => <Post message={p.message} likeCount={p.likeCount} />);\n  let newPostElement = React.createRef();\n  let onAddPost = (values) => {\n    props.addPost(values.newPostText);\n  }\n  return (\n  <div className={s.postsBlock}>\n    <h3>My post</h3>\n    <PostFormRedux onSubmit={ onAddPost } />\n    <div className={s.posts}>\n      {postsElement}\n    </div>\n  </div>)\n});\n\n// class MyPosts extends PureComponent {\n// // shouldComponentUpdate(nextProps, nextState){\n// //   return nextProps != this.props || nextState != this.props; \n// // }\n\n//   render(){\n//     let postsElement = this.props.posts.map(p => <Post message={p.message} likeCount={p.likeCount} />);\n//     let newPostElement = React.createRef();\n//     let onAddPost = (values) => {\n//       this.props.addPost(values.newPostText);\n//     }\n//     return <div className={s.postsBlock}>\n//       <h3>My post</h3>\n//       <PostFormRedux onSubmit={ onAddPost } />\n//       <div className={s.posts}>\n//         {postsElement}\n//       </div>\n//     </div>\n//   }\n\n// }\n\nconst addNewPostForm = (props) => {\n  return (\n  <form action=\"\" onSubmit={props.handleSubmit}>\n      <Field placeholder=\"Enter your message\" name=\"newPostText\" component={TextArea} \n      validate = {[required, maxLenght10]} />\n      <div>\n      <button>Add post</button>\n      </div>\n  </form>\n  );\n}\n\nconst PostFormRedux = reduxForm({form: 'prfileMessageForm'})(addNewPostForm);\n\nexport default MyPosts;"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Desktop/react-pr/src/components/Profile/MyPosts/MyPostsContainer.jsx\";\nimport React from \"react\";\nimport { addPostActionCreator, updateNewPostActionCreator } from \"../../../redux/profile-reducer\";\nimport MyPosts from \"./MyPosts\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MyPostsContainer = props => {\n  let addPost = () => {\n    props.store.dispatch(addPostActionCreator());\n  };\n\n  let onPostChange = text => {\n    let action = updateNewPostActionCreator(text);\n    props.store.dispatch(action);\n  };\n\n  return /*#__PURE__*/_jsxDEV(MyPosts, {\n    updateNewPostText: onPostChange,\n    addPost: addPost,\n    posts: props.posts\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 10\n  }, this);\n};\n\n_c = MyPostsContainer;\nexport default MyPostsContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"MyPostsContainer\");","map":{"version":3,"sources":["/Users/admin/Desktop/react-pr/src/components/Profile/MyPosts/MyPostsContainer.jsx"],"names":["React","addPostActionCreator","updateNewPostActionCreator","MyPosts","MyPostsContainer","props","addPost","store","dispatch","onPostChange","text","action","posts"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,oBAAT,EAA+BC,0BAA/B,QAAiE,gCAAjE;AACA,OAAOC,OAAP,MAAoB,WAApB;;;AAEA,MAAMC,gBAAgB,GAAIC,KAAD,IAAW;AAElC,MAAIC,OAAO,GAAG,MAAM;AAClBD,IAAAA,KAAK,CAACE,KAAN,CAAYC,QAAZ,CAAqBP,oBAAoB,EAAzC;AACD,GAFD;;AAIA,MAAIQ,YAAY,GAAIC,IAAD,IAAU;AAC3B,QAAIC,MAAM,GAAGT,0BAA0B,CAACQ,IAAD,CAAvC;AACAL,IAAAA,KAAK,CAACE,KAAN,CAAYC,QAAZ,CAAqBG,MAArB;AAED,GAJD;;AAKA,sBAAO,QAAC,OAAD;AAAS,IAAA,iBAAiB,EAAEF,YAA5B;AAA0C,IAAA,OAAO,EAAEH,OAAnD;AAA4D,IAAA,KAAK,EAAID,KAAK,CAACO;AAA3E;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CAZD;;KAAMR,gB;AAcN,eAAeA,gBAAf","sourcesContent":["import React from \"react\";\nimport { addPostActionCreator, updateNewPostActionCreator } from \"../../../redux/profile-reducer\";\nimport MyPosts from \"./MyPosts\";\n\nconst MyPostsContainer = (props) => {\n\n  let addPost = () => {\n    props.store.dispatch(addPostActionCreator());\n  }\n\n  let onPostChange = (text) => {\n    let action = updateNewPostActionCreator(text);\n    props.store.dispatch(action);\n\n  }\n  return <MyPosts updateNewPostText={onPostChange} addPost={addPost} posts = {props.posts}/>\n}\n\nexport default MyPostsContainer;"]},"metadata":{},"sourceType":"module"}
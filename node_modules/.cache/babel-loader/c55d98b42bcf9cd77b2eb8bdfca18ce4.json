{"ast":null,"code":"import dialogsReducer from \"./dialogs-reducer\";\nimport profileReducer from \"./profile-reducer\";\nimport sidebarReducer from \"./sidebar-reducer\";\nlet store = {\n  _state: {\n    profilePage: {\n      posts: [{\n        id: 1,\n        message: 'Hi, how are you',\n        likeCount: 2\n      }, {\n        id: 2,\n        message: 'Its my first post!',\n        likeCount: 3\n      }],\n      newPostText: 'Napisz text'\n    },\n    dialogsPage: {\n      messages: [{\n        id: 1,\n        message: 'Hi'\n      }, {\n        id: 2,\n        message: 'How a you'\n      }, {\n        id: 3,\n        message: 'Yo'\n      }],\n      dialogs: [{\n        id: 1,\n        name: 'Vadym'\n      }, {\n        id: 2,\n        name: 'Klaudia'\n      }, {\n        id: 3,\n        name: 'Maksim'\n      }],\n      newMessageBody: ''\n    },\n    sidebar: {}\n  },\n\n  _callSubscriber() {\n    console.log('state change');\n  },\n\n  getState() {\n    return this._state;\n  },\n\n  subscribe(observe) {\n    this._callSubscriber = observe;\n  },\n\n  dispatch(action) {\n    this._state.profilePage = profileReducer(this._state.profilePage, action);\n    this._state.dialogsPage = dialogsReducer(this._state.dialogsPage, action);\n    this._state.dialogsPage = sidebarReducer(this._state.sidebar, action);\n\n    this._callSubscriber(this._state);\n  }\n\n};\nexport const addPostActionCreator = () => ({\n  type: ADD_POST\n});\nexport const updateNewPostActionCreator = text => ({\n  type: UPDATE_NEW_POST_TEXT,\n  newText: text\n});\nexport const sendMessageCreator = () => ({\n  type: SEND_MESSAGE\n});\nexport const updateNewMessageBodyCreator = body => ({\n  type: UPDATE_NEW_MESSAGE_BODY,\n  body: body\n});\nexport default store;\nwindow.store = store;","map":{"version":3,"sources":["/Users/vadymchukan/Desktop/www/react-start/react-pr/src/redux/state.js"],"names":["dialogsReducer","profileReducer","sidebarReducer","store","_state","profilePage","posts","id","message","likeCount","newPostText","dialogsPage","messages","dialogs","name","newMessageBody","sidebar","_callSubscriber","console","log","getState","subscribe","observe","dispatch","action","addPostActionCreator","type","ADD_POST","updateNewPostActionCreator","text","UPDATE_NEW_POST_TEXT","newText","sendMessageCreator","SEND_MESSAGE","updateNewMessageBodyCreator","body","UPDATE_NEW_MESSAGE_BODY","window"],"mappings":"AAAA,OAAOA,cAAP,MAA2B,mBAA3B;AACA,OAAOC,cAAP,MAA2B,mBAA3B;AACA,OAAOC,cAAP,MAA2B,mBAA3B;AAIA,IAAIC,KAAK,GAAG;AACRC,EAAAA,MAAM,EAAE;AACJC,IAAAA,WAAW,EAAE;AACTC,MAAAA,KAAK,EAAE,CACH;AAAEC,QAAAA,EAAE,EAAE,CAAN;AAASC,QAAAA,OAAO,EAAE,iBAAlB;AAAqCC,QAAAA,SAAS,EAAE;AAAhD,OADG,EAEH;AAAEF,QAAAA,EAAE,EAAE,CAAN;AAASC,QAAAA,OAAO,EAAE,oBAAlB;AAAwCC,QAAAA,SAAS,EAAE;AAAnD,OAFG,CADE;AAKTC,MAAAA,WAAW,EAAE;AALJ,KADT;AAQJC,IAAAA,WAAW,EAAE;AACTC,MAAAA,QAAQ,EAAE,CACN;AAAEL,QAAAA,EAAE,EAAE,CAAN;AAASC,QAAAA,OAAO,EAAE;AAAlB,OADM,EAEN;AAAED,QAAAA,EAAE,EAAE,CAAN;AAASC,QAAAA,OAAO,EAAE;AAAlB,OAFM,EAGN;AAAED,QAAAA,EAAE,EAAE,CAAN;AAASC,QAAAA,OAAO,EAAE;AAAlB,OAHM,CADD;AAMTK,MAAAA,OAAO,EAAE,CACL;AAAEN,QAAAA,EAAE,EAAE,CAAN;AAASO,QAAAA,IAAI,EAAE;AAAf,OADK,EAEL;AAAEP,QAAAA,EAAE,EAAE,CAAN;AAASO,QAAAA,IAAI,EAAE;AAAf,OAFK,EAGL;AAAEP,QAAAA,EAAE,EAAE,CAAN;AAASO,QAAAA,IAAI,EAAE;AAAf,OAHK,CANA;AAWTC,MAAAA,cAAc,EAAE;AAXP,KART;AAuBJC,IAAAA,OAAO,EAAE;AAvBL,GADA;;AA0BRC,EAAAA,eAAe,GAAG;AACdC,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACH,GA5BO;;AA6BRC,EAAAA,QAAQ,GAAG;AACP,WAAO,KAAKhB,MAAZ;AACH,GA/BO;;AAgCRiB,EAAAA,SAAS,CAACC,OAAD,EAAU;AACf,SAAKL,eAAL,GAAuBK,OAAvB;AACH,GAlCO;;AAmCRC,EAAAA,QAAQ,CAACC,MAAD,EAAS;AAEb,SAAKpB,MAAL,CAAYC,WAAZ,GAA0BJ,cAAc,CAAC,KAAKG,MAAL,CAAYC,WAAb,EAA0BmB,MAA1B,CAAxC;AACA,SAAKpB,MAAL,CAAYO,WAAZ,GAA0BX,cAAc,CAAC,KAAKI,MAAL,CAAYO,WAAb,EAA0Ba,MAA1B,CAAxC;AACA,SAAKpB,MAAL,CAAYO,WAAZ,GAA0BT,cAAc,CAAC,KAAKE,MAAL,CAAYY,OAAb,EAAsBQ,MAAtB,CAAxC;;AAEA,SAAKP,eAAL,CAAqB,KAAKb,MAA1B;AAEH;;AA3CO,CAAZ;AA+CA,OAAO,MAAMqB,oBAAoB,GAAG,OAAO;AAAEC,EAAAA,IAAI,EAAEC;AAAR,CAAP,CAA7B;AACP,OAAO,MAAMC,0BAA0B,GAAIC,IAAD,KAAW;AAAEH,EAAAA,IAAI,EAAEI,oBAAR;AAA8BC,EAAAA,OAAO,EAAEF;AAAvC,CAAX,CAAnC;AAEP,OAAO,MAAMG,kBAAkB,GAAG,OAAO;AAAEN,EAAAA,IAAI,EAAEO;AAAR,CAAP,CAA3B;AACP,OAAO,MAAMC,2BAA2B,GAAIC,IAAD,KAAW;AAAET,EAAAA,IAAI,EAAEU,uBAAR;AAAiCD,EAAAA,IAAI,EAAEA;AAAvC,CAAX,CAApC;AAEP,eAAehC,KAAf;AACAkC,MAAM,CAAClC,KAAP,GAAeA,KAAf","sourcesContent":["import dialogsReducer from \"./dialogs-reducer\";\nimport profileReducer from \"./profile-reducer\";\nimport sidebarReducer from \"./sidebar-reducer\";\n\n\n\nlet store = {\n    _state: {\n        profilePage: {\n            posts: [\n                { id: 1, message: 'Hi, how are you', likeCount: 2 },\n                { id: 2, message: 'Its my first post!', likeCount: 3 },\n            ],\n            newPostText: 'Napisz text'\n        },\n        dialogsPage: {\n            messages: [\n                { id: 1, message: 'Hi' },\n                { id: 2, message: 'How a you' },\n                { id: 3, message: 'Yo' }\n            ],\n            dialogs: [\n                { id: 1, name: 'Vadym' },\n                { id: 2, name: 'Klaudia' },\n                { id: 3, name: 'Maksim' }\n            ],\n            newMessageBody: ''\n\n\n        },\n        sidebar: {}\n    },\n    _callSubscriber() {\n        console.log('state change');\n    },\n    getState() {\n        return this._state;\n    },\n    subscribe(observe) {\n        this._callSubscriber = observe;\n    },\n    dispatch(action) {\n\n        this._state.profilePage = profileReducer(this._state.profilePage, action);\n        this._state.dialogsPage = dialogsReducer(this._state.dialogsPage, action);\n        this._state.dialogsPage = sidebarReducer(this._state.sidebar, action);\n\n        this._callSubscriber(this._state);\n\n    }\n\n}\n\nexport const addPostActionCreator = () => ({ type: ADD_POST })\nexport const updateNewPostActionCreator = (text) => ({ type: UPDATE_NEW_POST_TEXT, newText: text })\n\nexport const sendMessageCreator = () => ({ type: SEND_MESSAGE })\nexport const updateNewMessageBodyCreator = (body) => ({ type: UPDATE_NEW_MESSAGE_BODY, body: body })\n\nexport default store;\nwindow.store = store;"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Desktop/react-pr/src/hoc/withAuthRedirect.js\";\nimport React, { Component } from \"react\";\nimport { Navigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nlet mapStateToPropsForRedirect = state => ({\n  isAuth: state.auth.isAuth\n});\n\nexport const widthAuthRedirect = Component => {\n  class RedirectComponent extends React.Component {\n    render() {\n      if (!this.props.isAuth) return /*#__PURE__*/_jsxDEV(Navigate, {\n        to: \"/login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 44\n      }, this);\n      return /*#__PURE__*/_jsxDEV(Component, { ...this.props\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 20\n      }, this);\n    }\n\n  }\n\n  let ConecctedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\n  return RedirectComponent;\n};","map":{"version":3,"sources":["/Users/admin/Desktop/react-pr/src/hoc/withAuthRedirect.js"],"names":["React","Component","Navigate","mapStateToPropsForRedirect","state","isAuth","auth","widthAuthRedirect","RedirectComponent","render","props","ConecctedAuthRedirectComponent","connect"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,QAAT,QAAyB,kBAAzB;;;AAEA,IAAIC,0BAA0B,GAAIC,KAAD,KAAY;AACzCC,EAAAA,MAAM,EAAED,KAAK,CAACE,IAAN,CAAWD;AADsB,CAAZ,CAAjC;;AAIA,OAAO,MAAME,iBAAiB,GAAIN,SAAD,IAAe;AAC5C,QAAMO,iBAAN,SAAgCR,KAAK,CAACC,SAAtC,CAAgD;AAC5CQ,IAAAA,MAAM,GAAG;AACL,UAAI,CAAC,KAAKC,KAAL,CAAWL,MAAhB,EAAwB,oBAAO,QAAC,QAAD;AAAU,QAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,cAAP;AACxB,0BAAO,QAAC,SAAD,OAAe,KAAKK;AAApB;AAAA;AAAA;AAAA;AAAA,cAAP;AACH;;AAJ2C;;AAQhD,MAAIC,8BAA8B,GAAGC,OAAO,CAACT,0BAAD,CAAP,CAAoCK,iBAApC,CAArC;AAGA,SAAOA,iBAAP;AAEH,CAdM","sourcesContent":["import React, { Component } from \"react\";\nimport { Navigate } from \"react-router-dom\";\n\nlet mapStateToPropsForRedirect = (state) => ({\n    isAuth: state.auth.isAuth\n})\n\nexport const widthAuthRedirect = (Component) => {\n    class RedirectComponent extends React.Component {\n        render (){\n            if (!this.props.isAuth) return <Navigate to='/login' />\n            return <Component {...this.props}/>\n        }\n    }\n\n\n    let ConecctedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\n    \n\n    return RedirectComponent;\n    \n}"]},"metadata":{},"sourceType":"module"}
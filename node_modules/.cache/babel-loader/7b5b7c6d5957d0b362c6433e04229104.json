{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Desktop/react-pr/src/components/Profile/MyPosts/MyPosts.jsx\";\nimport React, { Component } from \"react\";\nimport s from './MyPosts.module.css';\nimport Post from \"./Post/Post\";\nimport { Field, reduxForm } from \"redux-form\";\nimport { maxLenghtCreator, required } from \"../../../units/validators/validators\";\nimport { TextArea } from \"../../common/FormsControls/FormsControls\";\nimport { PureComponent } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst maxLenght10 = maxLenghtCreator(10);\nconst MyPosts = /*#__PURE__*/React.memo(_c = props => {\n  let postsElement = props.posts.map(p => /*#__PURE__*/_jsxDEV(Post, {\n    message: p.message,\n    likeCount: p.likeCount\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 43\n  }, this));\n  let newPostElement = /*#__PURE__*/React.createRef();\n\n  let onAddPost = values => {\n    props.addPost(values.newPostText);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: s.postsBlock,\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"My post\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(PostFormRedux, {\n      onSubmit: onAddPost\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: s.posts,\n      children: postsElement\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 3\n  }, this);\n}); // class MyPosts extends PureComponent {\n// // shouldComponentUpdate(nextProps, nextState){\n// //   return nextProps != this.props || nextState != this.props; \n// // }\n//   render(){\n//     let postsElement = this.props.posts.map(p => <Post message={p.message} likeCount={p.likeCount} />);\n//     let newPostElement = React.createRef();\n//     let onAddPost = (values) => {\n//       this.props.addPost(values.newPostText);\n//     }\n//     return <div className={s.postsBlock}>\n//       <h3>My post</h3>\n//       <PostFormRedux onSubmit={ onAddPost } />\n//       <div className={s.posts}>\n//         {postsElement}\n//       </div>\n//     </div>\n//   }\n// }\n\n_c2 = MyPosts;\n\nconst addNewPostForm = props => {\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    action: \"\",\n    onSubmit: props.handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(Field, {\n      placeholder: \"Enter your message\",\n      name: \"newPostText\",\n      component: TextArea,\n      validate: [required, maxLenght10]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Add post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 3\n  }, this);\n};\n\nconst PostFormRedux = reduxForm({\n  form: 'prfileMessageForm'\n})(addNewPostForm);\n_c3 = PostFormRedux;\nexport default MyPosts;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"MyPosts$React.memo\");\n$RefreshReg$(_c2, \"MyPosts\");\n$RefreshReg$(_c3, \"PostFormRedux\");","map":{"version":3,"sources":["/Users/admin/Desktop/react-pr/src/components/Profile/MyPosts/MyPosts.jsx"],"names":["React","Component","s","Post","Field","reduxForm","maxLenghtCreator","required","TextArea","PureComponent","maxLenght10","MyPosts","memo","props","postsElement","posts","map","p","message","likeCount","newPostElement","createRef","onAddPost","values","addPost","newPostText","postsBlock","addNewPostForm","handleSubmit","PostFormRedux","form"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,CAAP,MAAc,sBAAd;AACA,OAAOC,IAAP,MAAiB,aAAjB;AACA,SAASC,KAAT,EAAgBC,SAAhB,QAAiC,YAAjC;AACA,SAASC,gBAAT,EAA2BC,QAA3B,QAA2C,sCAA3C;AACA,SAASC,QAAT,QAAyB,0CAAzB;AACA,SAASC,aAAT,QAA8B,OAA9B;;AAEA,MAAMC,WAAW,GAAGJ,gBAAgB,CAAC,EAAD,CAApC;AAEA,MAAMK,OAAO,gBAAGX,KAAK,CAACY,IAAN,MAAWC,KAAK,IAAI;AAClC,MAAIC,YAAY,GAAGD,KAAK,CAACE,KAAN,CAAYC,GAAZ,CAAgBC,CAAC,iBAAI,QAAC,IAAD;AAAM,IAAA,OAAO,EAAEA,CAAC,CAACC,OAAjB;AAA0B,IAAA,SAAS,EAAED,CAAC,CAACE;AAAvC;AAAA;AAAA;AAAA;AAAA,UAArB,CAAnB;AACA,MAAIC,cAAc,gBAAGpB,KAAK,CAACqB,SAAN,EAArB;;AACA,MAAIC,SAAS,GAAIC,MAAD,IAAY;AAC1BV,IAAAA,KAAK,CAACW,OAAN,CAAcD,MAAM,CAACE,WAArB;AACD,GAFD;;AAGA,sBACA;AAAK,IAAA,SAAS,EAAEvB,CAAC,CAACwB,UAAlB;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,aAAD;AAAe,MAAA,QAAQ,EAAGJ;AAA1B;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAK,MAAA,SAAS,EAAEpB,CAAC,CAACa,KAAlB;AAAA,gBACGD;AADH;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADA;AAQD,CAde,CAAhB,C,CAgBA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;MApCMH,O;;AAsCN,MAAMgB,cAAc,GAAId,KAAD,IAAW;AAChC,sBACA;AAAM,IAAA,MAAM,EAAC,EAAb;AAAgB,IAAA,QAAQ,EAAEA,KAAK,CAACe,YAAhC;AAAA,4BACI,QAAC,KAAD;AAAO,MAAA,WAAW,EAAC,oBAAnB;AAAwC,MAAA,IAAI,EAAC,aAA7C;AAA2D,MAAA,SAAS,EAAEpB,QAAtE;AACA,MAAA,QAAQ,EAAI,CAACD,QAAD,EAAWG,WAAX;AADZ;AAAA;AAAA;AAAA;AAAA,YADJ,eAGI;AAAA,6BACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,YAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADA;AASD,CAVD;;AAYA,MAAMmB,aAAa,GAAGxB,SAAS,CAAC;AAACyB,EAAAA,IAAI,EAAE;AAAP,CAAD,CAAT,CAAuCH,cAAvC,CAAtB;MAAME,a;AAEN,eAAelB,OAAf","sourcesContent":["import React, { Component } from \"react\";\nimport s from './MyPosts.module.css';\nimport Post from \"./Post/Post\";\nimport { Field, reduxForm } from \"redux-form\";\nimport { maxLenghtCreator, required } from \"../../../units/validators/validators\";\nimport { TextArea } from \"../../common/FormsControls/FormsControls\";\nimport { PureComponent } from \"react\";\n\nconst maxLenght10 = maxLenghtCreator(10);\n\nconst MyPosts = React.memo(props => {\n  let postsElement = props.posts.map(p => <Post message={p.message} likeCount={p.likeCount} />);\n  let newPostElement = React.createRef();\n  let onAddPost = (values) => {\n    props.addPost(values.newPostText);\n  }\n  return (\n  <div className={s.postsBlock}>\n    <h3>My post</h3>\n    <PostFormRedux onSubmit={ onAddPost } />\n    <div className={s.posts}>\n      {postsElement}\n    </div>\n  </div>)\n});\n\n// class MyPosts extends PureComponent {\n// // shouldComponentUpdate(nextProps, nextState){\n// //   return nextProps != this.props || nextState != this.props; \n// // }\n\n//   render(){\n//     let postsElement = this.props.posts.map(p => <Post message={p.message} likeCount={p.likeCount} />);\n//     let newPostElement = React.createRef();\n//     let onAddPost = (values) => {\n//       this.props.addPost(values.newPostText);\n//     }\n//     return <div className={s.postsBlock}>\n//       <h3>My post</h3>\n//       <PostFormRedux onSubmit={ onAddPost } />\n//       <div className={s.posts}>\n//         {postsElement}\n//       </div>\n//     </div>\n//   }\n\n// }\n\nconst addNewPostForm = (props) => {\n  return (\n  <form action=\"\" onSubmit={props.handleSubmit}>\n      <Field placeholder=\"Enter your message\" name=\"newPostText\" component={TextArea} \n      validate = {[required, maxLenght10]} />\n      <div>\n      <button>Add post</button>\n      </div>\n  </form>\n  );\n}\n\nconst PostFormRedux = reduxForm({form: 'prfileMessageForm'})(addNewPostForm);\n\nexport default MyPosts;"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Desktop/react-pr/src/components/Dialogs/DialogsContainer.jsx\";\nimport React from \"react\";\nimport DialogItem from \"./DialogItem/DialogItem\";\nimport Message from \"./Message/Message\";\nimport { updateNewMessageBodyCreator, sendMessageCreator } from \"../../redux/dialogs-reducer\";\nimport Dialogs from \"./Dialogs\";\nimport { connect } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\n/*#__PURE__*/\n_jsxDEV(DialogItem, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 8,\n  columnNumber: 1\n}, this);\n\n/*#__PURE__*/\n_jsxDEV(Message, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 10,\n  columnNumber: 1\n}, this); // const DialogsContainer = () => {\n//     return (\n//         <StoreContext.Consumer>\n//             {\n//                 (store) =>{\n//                     let state = store.getState().dialogsPage;\n//                     let onSendMessageClick = () => {\n//                         store.dispatch(sendMessageCreator());\n//                     }\n//                     let onNewMessageChange = (body) => {\n//                         store.dispatch(updateNewMessageBodyCreator(body));\n//                     }\n//                     return <Dialogs updateNewMessageBody = {onNewMessageChange}\n//                     sendMessage = {onSendMessageClick} \n//                     dialogsPage = {state}/>\n//                 }\n//             }\n//         </StoreContext.Consumer>\n//     )\n// }\n\n\nlet mapStateToProps = state => {\n  return {\n    dialogsPage: state.dialogsPage\n  };\n};\n\nlet mapDispatchToProps = dispatch => {\n  return {\n    updateNewMessageBody: () => {\n      dispatch(sendMessageCreator());\n    },\n    sendMessage: body => {\n      dispatch(updateNewMessageBodyCreator(body));\n    }\n  };\n};\n\nconst DialogsContainer = connect(mapStateToProps, mapDispatchToProps)(Dialogs);\nexport default DialogsContainer;","map":{"version":3,"sources":["/Users/admin/Desktop/react-pr/src/components/Dialogs/DialogsContainer.jsx"],"names":["React","DialogItem","Message","updateNewMessageBodyCreator","sendMessageCreator","Dialogs","connect","mapStateToProps","state","dialogsPage","mapDispatchToProps","dispatch","updateNewMessageBody","sendMessage","body","DialogsContainer"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACC,SAASC,2BAAT,EAAsCC,kBAAtC,QAAgE,6BAAhE;AACD,OAAOC,OAAP,MAAoB,WAApB;AACA,SAASC,OAAT,QAAwB,aAAxB;;;AAEA;AAAA,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA;;AAEA;AAAA,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,S,CAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,IAAIC,eAAe,GAAIC,KAAD,IAAW;AAC7B,SAAO;AACHC,IAAAA,WAAW,EAAED,KAAK,CAACC;AADhB,GAAP;AAGH,CAJD;;AAMA,IAAIC,kBAAkB,GAAIC,QAAD,IAAc;AACnC,SAAO;AACHC,IAAAA,oBAAoB,EAAE,MAAM;AACxBD,MAAAA,QAAQ,CAACP,kBAAkB,EAAnB,CAAR;AACH,KAHE;AAIHS,IAAAA,WAAW,EAAGC,IAAD,IAAQ;AACjBH,MAAAA,QAAQ,CAACR,2BAA2B,CAACW,IAAD,CAA5B,CAAR;AACH;AANE,GAAP;AAQH,CATD;;AAWA,MAAMC,gBAAgB,GAAGT,OAAO,CAACC,eAAD,EAAkBG,kBAAlB,CAAP,CAA8CL,OAA9C,CAAzB;AAEA,eAAeU,gBAAf","sourcesContent":["import React from \"react\";\nimport DialogItem from \"./DialogItem/DialogItem\";\nimport Message from \"./Message/Message\";\n import { updateNewMessageBodyCreator, sendMessageCreator } from \"../../redux/dialogs-reducer\";\nimport Dialogs from \"./Dialogs\";\nimport { connect } from \"react-redux\";\n\n<DialogItem />;\n\n<Message />;\n\n// const DialogsContainer = () => {\n\n//     return (\n//         <StoreContext.Consumer>\n//             {\n//                 (store) =>{\n//                     let state = store.getState().dialogsPage;\n\n//                     let onSendMessageClick = () => {\n//                         store.dispatch(sendMessageCreator());\n//                     }\n                \n//                     let onNewMessageChange = (body) => {\n//                         store.dispatch(updateNewMessageBodyCreator(body));\n//                     }\n\n//                     return <Dialogs updateNewMessageBody = {onNewMessageChange}\n//                     sendMessage = {onSendMessageClick} \n//                     dialogsPage = {state}/>\n//                 }\n//             }\n//         </StoreContext.Consumer>\n//     )\n// }\n\nlet mapStateToProps = (state) => {\n    return {\n        dialogsPage: state.dialogsPage\n    }\n}\n\nlet mapDispatchToProps = (dispatch) => {\n    return {\n        updateNewMessageBody: () => {\n            dispatch(sendMessageCreator());\n        },\n        sendMessage: (body)=>{\n            dispatch(updateNewMessageBodyCreator(body));\n        }\n    }\n}\n\nconst DialogsContainer = connect(mapStateToProps, mapDispatchToProps) (Dialogs);\n\nexport default DialogsContainer;\n\n"]},"metadata":{},"sourceType":"module"}